{"ast":null,"code":"import _asyncToGenerator from \"/Users/advityasood/jude_anyft/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport NodeDetailManager from '@toruslabs/fetch-node-details';\nimport { get, setAPIKey } from '@toruslabs/http-helpers';\nimport { SafeEventEmitter, ObjectMultiplex, createStreamMiddleware, JRPCEngine, createIdRemapMiddleware, BasePostMessageStream, setupMultiplex } from '@toruslabs/openlogin-jrpc';\nimport TorusJs from '@toruslabs/torus.js';\nimport deepmerge from 'lodash.merge';\nimport { ObservableStore, storeAsStream } from '@metamask/obs-store';\nimport { ethErrors, EthereumRpcError } from 'eth-rpc-errors';\nimport dequal from 'fast-deep-equal';\nimport { isDuplexStream } from 'is-stream';\nimport pump from 'pump';\nimport loglevel from 'loglevel';\nimport createHash from 'create-hash';\nimport { EventEmitter } from 'events';\nconst LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  TWITCH: \"twitch\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\"\n};\nconst WALLET_OPENLOGIN_VERIFIER_MAP = {\n  [LOGIN_PROVIDER.GOOGLE]: \"tkey-google\",\n  [LOGIN_PROVIDER.FACEBOOK]: \"tkey-facebook\",\n  [LOGIN_PROVIDER.TWITCH]: \"tkey-twitch\",\n  [LOGIN_PROVIDER.REDDIT]: \"tkey-reddit\",\n  [LOGIN_PROVIDER.DISCORD]: \"tkey-discord\"\n};\nconst PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  WYRE: \"wyre\",\n  RAMPNETWORK: \"rampnetwork\",\n  XANPOOL: \"xanpool\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\"\n};\nconst TORUS_BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  BINANCE: \"binance\",\n  TESTING: \"testing\",\n  LRC: \"lrc\",\n  BETA: \"beta\"\n};\nconst BUTTON_POSITION = {\n  BOTTOM_LEFT: \"bottom-left\",\n  TOP_LEFT: \"top-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  TOP_RIGHT: \"top-right\"\n};\nconst paymentProviders$1 = {\n  [PAYMENT_PROVIDER.RAMPNETWORK]: {\n    line1: \"Debit Card/ Apple Pay/ Bank transfer\",\n    line2: \"0.49% - 2.9%\",\n    line3: \"5,000€/purchase, 20,000€/mo\",\n    supportPage: \"https://instant.ramp.network/\",\n    minOrderValue: 50,\n    maxOrderValue: 20000,\n    validCurrencies: [\"GBP\", \"EUR\", \"USD\"],\n    validCryptoCurrencies: [\"ETH\", \"DAI\", \"USDC\", \"BSC_BNB\"],\n    includeFees: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.MOONPAY]: {\n    line1: \"Credit / Debit Card / Apple Pay\",\n    line2: \"4.5% or 5 USD\",\n    line3: \"2,000€/day, 10,000€/mo\",\n    supportPage: \"https://help.moonpay.io/en/\",\n    minOrderValue: 24.99,\n    maxOrderValue: 50000,\n    validCurrencies: [\"USD\", \"EUR\", \"GBP\", \"AUD\", \"CAD\", \"SGD\", \"RUB\"],\n    validCryptoCurrencies: [\"ETH\", \"DAI\", \"TUSD\", \"USDC\", \"USDT\", \"BNB_BSC\", \"BUSD_BSC\"],\n    includeFees: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.WYRE]: {\n    line1: \"Apple Pay/ Debit/ Credit Card\",\n    line2: \"4.9% + 30¢ or 5 USD\",\n    line3: \"$250/day\",\n    supportPage: \"https://support.sendwyre.com/en/\",\n    minOrderValue: 5,\n    maxOrderValue: 500,\n    validCurrencies: [\"USD\", \"AUD\", \"CAD\", \"GBP\", \"EUR\"],\n    validCryptoCurrencies: [\"ETH\", \"DAI\", \"USDC\", \"USDT\"],\n    includeFees: false,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.XANPOOL]: {\n    line1: \"PayNow/ InstaPay/ FPS/ GoJekPay/ UPI/ PromptPay/ VietelPay/ DuitNow\",\n    line2: \"2.5% buying, 3% selling\",\n    line3: \"$2,500 / day\",\n    supportPage: \"mailto:support@xanpool.com\",\n    minOrderValue: 100,\n    maxOrderValue: 2500,\n    validCurrencies: [\"SGD\", \"HKD\", \"MYR\", \"PHP\", \"INR\", \"VND\", \"THB\", \"IDR\"],\n    validCryptoCurrencies: [\"ETH\", \"USDT\"],\n    includeFees: true,\n    sell: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.MERCURYO]: {\n    line1: \"Credit/ Debit Card/ Apple Pay\",\n    line2: \"3.95% or 4 USD\",\n    line3: \"10,000€/day, 25,000€/mo\",\n    supportPage: \"mailto:support@mercuryo.io\",\n    minOrderValue: 30,\n    maxOrderValue: 5000,\n    validCurrencies: [\"USD\", \"EUR\", \"RUB\", \"TRY\", \"GBP\", \"UAH\"],\n    validCryptoCurrencies: [\"ETH\", \"DAI\", \"BAT\", \"USDT\", \"OKB\"],\n    includeFees: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.TRANSAK]: {\n    line1: \"Credit/ Debit Card/ <br/>Bank Transfer (sepa/gbp)\",\n    line2: \"0.99% - 5.5% or 5 USD\",\n    line3: \"500€/day\",\n    supportPage: \"https://support.transak.com/hc/en-US\",\n    minOrderValue: 20,\n    maxOrderValue: 500,\n    validCurrencies: [\"USD\", \"EUR\", \"GBP\", \"AUD\", \"CAD\", \"SGD\"],\n    validCryptoCurrencies: [\"ETH\", \"DAI\", \"USDC\", \"USDT\"],\n    includeFees: true,\n    enforceMax: false\n  }\n};\nconst translations = {\n  en: {\n    embed: {\n      continue: \"Continue\",\n      actionRequired: \"Authorization required\",\n      pendingAction: \"Click continue to proceed with your request in a popup\",\n      cookiesRequired: \"Cookies Required\",\n      enableCookies: \"Please enable cookies in your browser preferences to access Torus\",\n      clickHere: \"More Info\"\n    }\n  },\n  de: {\n    embed: {\n      continue: \"Fortsetzen\",\n      actionRequired: \"Autorisierung erforderlich\",\n      pendingAction: \"Klicken Sie in einem Popup auf Weiter, um mit Ihrer Anfrage fortzufahren\",\n      cookiesRequired: \"Cookies benötigt\",\n      enableCookies: \"Bitte aktivieren Sie Cookies in Ihren Browsereinstellungen, um auf Torus zuzugreifen\",\n      clickHere: \"Mehr Info\"\n    }\n  },\n  ja: {\n    embed: {\n      continue: \"継続する\",\n      actionRequired: \"認証が必要です\",\n      pendingAction: \"続行をクリックして、ポップアップでリクエストを続行します\",\n      cookiesRequired: \"必要なクッキー\",\n      enableCookies: \"Torusにアクセスするには、ブラウザの設定でCookieを有効にしてください。\",\n      clickHere: \"詳しくは\"\n    }\n  },\n  ko: {\n    embed: {\n      continue: \"계속하다\",\n      actionRequired: \"승인 필요\",\n      pendingAction: \"팝업에서 요청을 진행하려면 계속을 클릭하십시오.\",\n      cookiesRequired: \"쿠키 필요\",\n      enableCookies: \"브라우저 환경 설정에서 쿠키를 활성화하여 Torus에 액세스하십시오.\",\n      clickHere: \"더 많은 정보\"\n    }\n  },\n  zh: {\n    embed: {\n      continue: \"继续\",\n      actionRequired: \"需要授权\",\n      pendingAction: \"单击继续以在弹出窗口中继续您的请求\",\n      cookiesRequired: \"必填Cookie\",\n      enableCookies: \"请在您的浏览器首选项中启用cookie以访问Torus。\",\n      clickHere: \"更多信息\"\n    }\n  }\n};\nvar configuration = {\n  supportedVerifierList: [LOGIN_PROVIDER.GOOGLE, LOGIN_PROVIDER.REDDIT, LOGIN_PROVIDER.DISCORD],\n  paymentProviders: paymentProviders$1,\n  api: \"https://api.tor.us\",\n  translations,\n  prodTorusUrl: \"\",\n  localStorageKey: \"torus-\".concat(window.location.hostname)\n};\n\nconst runOnLoad = fn => new Promise((resolve, reject) => {\n  if (window.document.body != null) {\n    Promise.resolve(fn()).then(resolve).catch(reject);\n  } else {\n    window.document.addEventListener(\"DOMContentLoaded\", () => {\n      Promise.resolve(fn()).then(resolve).catch(reject);\n    });\n  }\n});\n\nconst htmlToElement = html => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild;\n};\n\nconst handleEvent = function (handle, eventName, handler) {\n  for (var _len = arguments.length, handlerArgs = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    handlerArgs[_key - 3] = arguments[_key];\n  }\n\n  const handlerWrapper = () => {\n    handler(...handlerArgs);\n    handle.removeEventListener(eventName, handlerWrapper);\n  };\n\n  handle.addEventListener(eventName, handlerWrapper);\n};\n\nconst handleStream = (handle, eventName, handler) => {\n  const handlerWrapper = chunk => {\n    handler(chunk);\n    handle.removeListener(eventName, handlerWrapper);\n  };\n\n  handle.on(eventName, handlerWrapper);\n};\n\nfunction documentReady() {\n  return _documentReady.apply(this, arguments);\n}\n\nfunction _documentReady() {\n  _documentReady = _asyncToGenerator(function* () {\n    return new Promise(resolve => {\n      if (document.readyState !== \"loading\") {\n        resolve();\n      } else {\n        handleEvent(document, \"DOMContentLoaded\", resolve);\n      }\n    });\n  });\n  return _documentReady.apply(this, arguments);\n}\n\nvar log = loglevel.getLogger(\"torus-embed\");\nvar messages = {\n  errors: {\n    disconnected: () => \"Torus: Lost connection to Torus.\",\n    permanentlyDisconnected: () => \"Torus: Disconnected from iframe. Page reload required.\",\n    sendSiteMetadata: () => \"Torus: Failed to send site metadata. This is an internal error, please report this bug.\",\n    unsupportedSync: method => \"Torus: The Torus Ethereum provider does not support synchronous methods like \".concat(method, \" without a callback parameter.\"),\n    invalidDuplexStream: () => \"Must provide a Node.js-style duplex stream.\",\n    invalidOptions: (maxEventListeners, shouldSendMetadata) => \"Invalid options. Received: { maxEventListeners: \".concat(maxEventListeners, \", shouldSendMetadata: \").concat(shouldSendMetadata, \" }\"),\n    invalidRequestArgs: () => \"Expected a single, non-array, object argument.\",\n    invalidRequestMethod: () => \"'args.method' must be a non-empty string.\",\n    invalidRequestParams: () => \"'args.params' must be an object or array if provided.\",\n    invalidLoggerObject: () => \"'args.logger' must be an object if provided.\",\n    invalidLoggerMethod: method => \"'args.logger' must include required method '\".concat(method, \"'.\")\n  },\n  info: {\n    connected: chainId => \"Torus: Connected to chain with ID \\\"\".concat(chainId, \"\\\".\")\n  },\n  warnings: {\n    // deprecated methods\n    enableDeprecation: 'Torus: \"\"ethereum.enable()\" is deprecated and may be removed in the future. ' + 'Please use \"ethereum.send(\"eth_requestAccounts\")\" instead. For more information, see: https://eips.ethereum.org/EIPS/eip-1102',\n    sendDeprecation: 'Torus: \"ethereum.send(...)\" is deprecated and may be removed in the future.' + ' Please use \"ethereum.sendAsync(...)\" or \"ethereum.request(...)\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n    events: {\n      close: 'Torus: The event \"close\" is deprecated and may be removed in the future. Please use \"disconnect\" instead.' + \"\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193\",\n      data: 'Torus: The event \"data\" is deprecated and will be removed in the future.' + 'Use \"message\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193#message',\n      networkChanged: 'Torus: The event \"networkChanged\" is deprecated and may be removed in the future.' + ' Please use \"chainChanged\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n      notification: 'Torus: The event \"notification\" is deprecated and may be removed in the future. ' + 'Please use \"message\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193'\n    },\n    publicConfigStore: 'Torus: The property \"publicConfigStore\" is deprecated and WILL be removed in the future.'\n  }\n};\nconst {\n  paymentProviders\n} = configuration;\n\nconst validatePaymentProvider = (provider, params) => {\n  const errors = {};\n\n  if (!provider) {\n    return {\n      errors,\n      isValid: true\n    };\n  }\n\n  if (provider && !paymentProviders[provider]) {\n    errors.provider = \"Invalid Provider\";\n    return {\n      errors,\n      isValid: Object.keys(errors).length === 0\n    };\n  }\n\n  const selectedProvider = paymentProviders[provider];\n  const selectedParams = params || {}; // set default values\n  // if (!selectedParams.selectedCurrency) [selectedParams.selectedCurrency] = selectedProvider.validCurrencies\n  // if (!selectedParams.fiatValue) selectedParams.fiatValue = selectedProvider.minOrderValue\n  // if (!selectedParams.selectedCryptoCurrency) [selectedParams.selectedCryptoCurrency] = selectedProvider.validCryptoCurrencies\n  // validations\n\n  if (selectedParams.fiatValue) {\n    const requestedOrderAmount = +parseFloat(selectedParams.fiatValue.toString()) || 0;\n    if (requestedOrderAmount < selectedProvider.minOrderValue) errors.fiatValue = \"Requested amount is lower than supported\";\n    if (requestedOrderAmount > selectedProvider.maxOrderValue && selectedProvider.enforceMax) errors.fiatValue = \"Requested amount is higher than supported\";\n  }\n\n  if (selectedParams.selectedCurrency && !selectedProvider.validCurrencies.includes(selectedParams.selectedCurrency)) {\n    errors.selectedCurrency = \"Unsupported currency\";\n  }\n\n  if (selectedParams.selectedCryptoCurrency && !selectedProvider.validCryptoCurrencies.includes(selectedParams.selectedCryptoCurrency)) {\n    errors.selectedCryptoCurrency = \"Unsupported cryptoCurrency\";\n  }\n\n  return {\n    errors,\n    isValid: Object.keys(errors).length === 0\n  };\n}; // utility functions\n\n/**\n * json-rpc-engine middleware that logs RPC errors and and validates req.method.\n *\n * @param log - The logging API to use.\n * @returns  json-rpc-engine middleware function\n */\n\n\nfunction createErrorMiddleware() {\n  return (req, res, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof req.method !== \"string\" || !req.method) {\n      res.error = ethErrors.rpc.invalidRequest({\n        message: \"The request 'method' must be a non-empty string.\",\n        data: req\n      });\n    }\n\n    next(done => {\n      const {\n        error\n      } = res;\n\n      if (!error) {\n        return done();\n      }\n\n      log.error(\"MetaMask - RPC Error: \".concat(error.message), error);\n      return done();\n    });\n  };\n} // resolve response.result or response, reject errors\n\n/**\n * Logs a stream disconnection error. Emits an 'error' if given an\n * EventEmitter that has listeners for the 'error' event.\n *\n * @param log - The logging API to use.\n * @param remoteLabel - The label of the disconnected stream.\n * @param error - The associated error to log.\n * @param emitter - The logging API to use.\n */\n\n\nfunction logStreamDisconnectWarning(remoteLabel, error, emitter) {\n  let warningMsg = \"MetaMask: Lost connection to \\\"\".concat(remoteLabel, \"\\\".\");\n\n  if (error !== null && error !== void 0 && error.stack) {\n    warningMsg += \"\\n\".concat(error.stack);\n  }\n\n  log.warn(warningMsg);\n\n  if (emitter && emitter.listenerCount(\"error\") > 0) {\n    emitter.emit(\"error\", warningMsg);\n  }\n}\n\nconst getPreopenInstanceId = () => Math.random().toString(36).slice(2);\n\nconst getTorusUrl = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator(function* (buildEnv, integrity) {\n    let torusUrl;\n    let logLevel; // Do not change this line\n\n    const version = \"1.20.4\";\n    let versionUsed = integrity.version || version;\n\n    try {\n      if ((buildEnv === \"binance\" || buildEnv === \"production\") && !integrity.version) {\n        let response;\n        if (!configuration.prodTorusUrl) response = yield get(\"\".concat(configuration.api, \"/latestversion?name=@toruslabs/torus-embed&version=\").concat(version), {}, {\n          useAPIKey: true\n        });else response = {\n          data: configuration.prodTorusUrl\n        };\n        versionUsed = response.data; // eslint-disable-next-line require-atomic-updates\n\n        configuration.prodTorusUrl = response.data;\n      }\n    } catch (error) {\n      log.error(error, \"unable to fetch latest version\");\n    }\n\n    log.info(\"version used: \", versionUsed);\n\n    switch (buildEnv) {\n      case \"binance\":\n        torusUrl = \"https://binance.tor.us/v\".concat(versionUsed);\n        logLevel = \"info\";\n        break;\n\n      case \"testing\":\n        torusUrl = \"https://testing.tor.us\";\n        logLevel = \"debug\";\n        break;\n\n      case \"lrc\":\n        torusUrl = \"https://lrc.tor.us\";\n        logLevel = \"debug\";\n        break;\n\n      case \"beta\":\n        torusUrl = \"https://beta.tor.us\";\n        logLevel = \"debug\";\n        break;\n\n      case \"development\":\n        torusUrl = \"http://localhost:4050\";\n        logLevel = \"debug\";\n        break;\n\n      default:\n        torusUrl = \"https://app.tor.us/v\".concat(versionUsed);\n        logLevel = \"error\";\n        break;\n    }\n\n    return {\n      torusUrl,\n      logLevel\n    };\n  });\n\n  return function getTorusUrl(_x, _x2) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nconst getUserLanguage = () => {\n  let userLanguage = window.navigator.language || \"en-US\";\n  const userLanguages = userLanguage.split(\"-\");\n  userLanguage = Object.prototype.hasOwnProperty.call(configuration.translations, userLanguages[0]) ? userLanguages[0] : \"en\";\n  return userLanguage;\n};\n\nconst EMITTED_NOTIFICATIONS = [\"eth_subscription\" // per eth-json-rpc-filters/subscriptionManager\n];\n\nconst NOOP = () => {// empty function\n};\n\nconst FEATURES_PROVIDER_CHANGE_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=660,width=375\";\nconst FEATURES_DEFAULT_WALLET_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=740,width=1315\";\nconst FEATURES_CONFIRM_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=700,width=450\";\n\nfunction storageAvailable(type) {\n  let storage;\n\n  try {\n    storage = window[type];\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return e && ( // everything except Firefox\n    e.code === 22 || // Firefox\n    e.code === 1014 || // test name field too, because code might not be present\n    // everything except Firefox\n    e.name === \"QuotaExceededError\" || // Firefox\n    e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") && // acknowledge QuotaExceededError only if there's something already stored\n    storage && storage.length !== 0;\n  }\n}\n\nfunction getPopupFeatures() {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n  const w = 1200;\n  const h = 700;\n  const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n  const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = \"titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=\".concat(h / systemZoom, \",width=\").concat(w / systemZoom, \",top=\").concat(top, \",left=\").concat(left);\n  return features;\n}\n\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nSafeEventEmitter.defaultMaxListeners = 100; // resolve response.result, reject errors\n\nconst getRpcPromiseCallback = function (resolve, reject) {\n  let unwrapResult = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  return (error, response) => {\n    if (error || response.error) {\n      return reject(error || response.error);\n    }\n\n    return !unwrapResult || Array.isArray(response) ? resolve(response) : resolve(response.result);\n  };\n};\n\nclass TorusInpageProvider extends SafeEventEmitter {\n  /**\n   * The chain ID of the currently connected Ethereum chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n\n  /**\n   * The user's currently selected Ethereum address.\n   * If null, MetaMask is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n\n  /**\n   * Indicating that this provider is a MetaMask provider.\n   */\n  constructor(connectionStream) {\n    let {\n      maxEventListeners = 100,\n      shouldSendMetadata = true,\n      jsonRpcStreamName = \"provider\"\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super();\n\n    _defineProperty(this, \"chainId\", void 0);\n\n    _defineProperty(this, \"selectedAddress\", void 0);\n\n    _defineProperty(this, \"_rpcEngine\", void 0);\n\n    _defineProperty(this, \"networkVersion\", void 0);\n\n    _defineProperty(this, \"shouldSendMetadata\", void 0);\n\n    _defineProperty(this, \"isTorus\", void 0);\n\n    _defineProperty(this, \"_publicConfigStore\", void 0);\n\n    _defineProperty(this, \"tryPreopenHandle\", void 0);\n\n    _defineProperty(this, \"enable\", void 0);\n\n    _defineProperty(this, \"_state\", void 0);\n\n    _defineProperty(this, \"_jsonRpcConnection\", void 0);\n\n    _defineProperty(this, \"_sentWarnings\", {\n      // methods\n      enable: false,\n      experimentalMethods: false,\n      send: false,\n      publicConfigStore: false,\n      // events\n      events: {\n        close: false,\n        data: false,\n        networkChanged: false,\n        notification: false\n      }\n    });\n\n    if (!isDuplexStream(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n\n    this.isTorus = true;\n    this.setMaxListeners(maxEventListeners); // private state\n\n    this._state = _objectSpread$1({}, TorusInpageProvider._defaultState); // public state\n\n    this.selectedAddress = null;\n    this.networkVersion = null;\n    this.chainId = null;\n    this.shouldSendMetadata = shouldSendMetadata; // bind functions (to prevent e.g. web3@1.x from making unbound calls)\n\n    this._handleAccountsChanged = this._handleAccountsChanged.bind(this);\n    this._handleChainChanged = this._handleChainChanged.bind(this);\n    this._handleUnlockStateChanged = this._handleUnlockStateChanged.bind(this);\n    this._handleConnect = this._handleConnect.bind(this);\n    this._handleDisconnect = this._handleDisconnect.bind(this);\n    this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);\n    this._sendSync = this._sendSync.bind(this);\n    this._rpcRequest = this._rpcRequest.bind(this);\n    this._warnOfDeprecation = this._warnOfDeprecation.bind(this);\n    this._initializeState = this._initializeState.bind(this);\n    this.request = this.request.bind(this);\n    this.send = this.send.bind(this);\n    this.sendAsync = this.sendAsync.bind(this); // this.enable = this.enable.bind(this);\n    // setup connectionStream multiplexing\n\n    const mux = new ObjectMultiplex();\n    pump(connectionStream, mux, connectionStream, this._handleStreamDisconnect.bind(this, \"MetaMask\")); // subscribe to metamask public config (one-way)\n\n    this._publicConfigStore = new ObservableStore({\n      storageKey: \"Metamask-Config\"\n    }); // handle isUnlocked changes, and chainChanged and networkChanged events\n    // this._publicConfigStore.subscribe((stringifiedState) => {\n    //   // This is because we are using store as string\n    //   const state = JSON.parse(stringifiedState as unknown as string);\n    //   if (\"isUnlocked\" in state && state.isUnlocked !== this._state.isUnlocked) {\n    //     this._state.isUnlocked = state.isUnlocked;\n    //     if (!this._state.isUnlocked) {\n    //       // accounts are never exposed when the extension is locked\n    //       this._handleAccountsChanged([]);\n    //     } else {\n    //       // this will get the exposed accounts, if any\n    //       try {\n    //         this._rpcRequest(\n    //           { method: \"eth_accounts\", params: [] },\n    //           NOOP,\n    //           true // indicating that eth_accounts _should_ update accounts\n    //         );\n    //       } catch (_) {\n    //         // Swallow error\n    //       }\n    //     }\n    //   }\n    //   if (\"selectedAddress\" in state && this.selectedAddress !== state.selectedAddress) {\n    //     try {\n    //       this._rpcRequest(\n    //         { method: \"eth_accounts\", params: [] },\n    //         NOOP,\n    //         true // indicating that eth_accounts _should_ update accounts\n    //       );\n    //     } catch (_) {\n    //       // Swallow error\n    //     }\n    //   }\n    //   // Emit chainChanged event on chain change\n    //   if (\"chainId\" in state && state.chainId !== this.chainId) {\n    //     this.chainId = state.chainId || null;\n    //     this.emit(\"chainChanged\", this.chainId);\n    //     // indicate that we've connected, for EIP-1193 compliance\n    //     // we do this here so that iframe can initialize\n    //     if (!this._state.hasEmittedConnection) {\n    //       this._handleConnect(this.chainId);\n    //       this._state.hasEmittedConnection = true;\n    //     }\n    //   }\n    //   // Emit networkChanged event on network change\n    //   if (\"networkVersion\" in state && state.networkVersion !== this.networkVersion) {\n    //     this.networkVersion = state.networkVersion || null;\n    //     this.emit(\"networkChanged\", this.networkVersion);\n    //   }\n    // });\n\n    pump(mux.createStream(\"publicConfig\"), storeAsStream(this._publicConfigStore), // RPC requests should still work if only this stream fails\n    logStreamDisconnectWarning.bind(this, \"MetaMask PublicConfigStore\")); // ignore phishing warning message (handled elsewhere)\n\n    mux.ignoreStream(\"phishing\"); // setup own event listeners\n    // EIP-1193 connect\n\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    }); // connect to async provider\n\n    const jsonRpcConnection = createStreamMiddleware();\n    pump(jsonRpcConnection.stream, mux.createStream(jsonRpcStreamName), jsonRpcConnection.stream, this._handleStreamDisconnect.bind(this, \"MetaMask RpcProvider\")); // handle RPC requests via dapp-side rpc engine\n\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(createErrorMiddleware());\n    rpcEngine.push(jsonRpcConnection.middleware);\n    this._rpcEngine = rpcEngine; // json rpc notification listener\n\n    jsonRpcConnection.events.on(\"notification\", payload => {\n      const {\n        method,\n        params\n      } = payload;\n\n      if (method === \"wallet_accountsChanged\") {\n        this._handleAccountsChanged(params);\n      } else if (method === \"wallet_unlockStateChanged\") {\n        this._handleUnlockStateChanged(params);\n      } else if (method === \"wallet_chainChanged\") {\n        this._handleChainChanged(params);\n      } else if (EMITTED_NOTIFICATIONS.includes(payload.method)) {\n        // EIP 1193 subscriptions, per eth-json-rpc-filters/subscriptionManager\n        this.emit(\"data\", payload); // deprecated\n\n        this.emit(\"notification\", params.result);\n        this.emit(\"message\", {\n          type: method,\n          data: params\n        });\n      } // Backward compatibility for older non EIP 1193 subscriptions\n      // this.emit('data', null, payload)\n\n    });\n  }\n\n  get publicConfigStore() {\n    if (!this._sentWarnings.publicConfigStore) {\n      log.warn(messages.warnings.publicConfigStore);\n      this._sentWarnings.publicConfigStore = true;\n    }\n\n    return this._publicConfigStore;\n  }\n  /**\n   * Returns whether the inpage provider is connected to Torus.\n   */\n\n\n  isConnected() {\n    return this._state.isConnected;\n  }\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   *\n   * @param args - The RPC request arguments.\n   * @returns A Promise that resolves with the result of the RPC method,\n   * or rejects if an error is encountered.\n   */\n\n\n  request(args) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n        throw ethErrors.rpc.invalidRequest({\n          message: messages.errors.invalidRequestArgs(),\n          data: args\n        });\n      }\n\n      const {\n        method,\n        params\n      } = args;\n\n      if (typeof method !== \"string\" || method.length === 0) {\n        throw ethErrors.rpc.invalidRequest({\n          message: messages.errors.invalidRequestMethod(),\n          data: args\n        });\n      }\n\n      if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n        throw ethErrors.rpc.invalidRequest({\n          message: messages.errors.invalidRequestParams(),\n          data: args\n        });\n      }\n\n      return new Promise((resolve, reject) => {\n        _this._rpcRequest({\n          method,\n          params\n        }, getRpcPromiseCallback(resolve, reject));\n      });\n    })();\n  }\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @param payload - The RPC request object.\n   * @param cb - The callback function.\n   */\n\n\n  sendAsync(payload, callback) {\n    this._rpcRequest(payload, callback);\n  }\n  /**\n   * We override the following event methods so that we can warn consumers\n   * about deprecated events:\n   *   addListener, on, once, prependListener, prependOnceListener\n   */\n\n\n  addListener(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n\n    return super.addListener(eventName, listener);\n  }\n\n  on(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n\n    return super.on(eventName, listener);\n  }\n\n  once(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n\n    return super.once(eventName, listener);\n  }\n\n  prependListener(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n\n    return super.prependListener(eventName, listener);\n  }\n\n  prependOnceListener(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n\n    return super.prependOnceListener(eventName, listener);\n  } // Private Methods\n  //= ===================\n\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n\n\n  _initializeState() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        const {\n          accounts,\n          chainId,\n          isUnlocked,\n          networkVersion\n        } = yield _this2.request({\n          method: \"wallet_getProviderState\"\n        }); // indicate that we've connected, for EIP-1193 compliance\n\n        _this2.emit(\"connect\", {\n          chainId\n        });\n\n        _this2._handleChainChanged({\n          chainId,\n          networkVersion\n        });\n\n        _this2._handleUnlockStateChanged({\n          accounts,\n          isUnlocked\n        });\n\n        _this2._handleAccountsChanged(accounts);\n      } catch (error) {\n        log.error(\"MetaMask: Failed to get initial state. Please report this bug.\", error);\n      } finally {\n        log.info(\"initialized state\");\n        _this2._state.initialized = true;\n\n        _this2.emit(\"_initialized\");\n      }\n    })();\n  }\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound.\n   *\n   * @param payload - The RPC request object.\n   * @param callback - The consumer's callback.\n   * @param isInternal - false - Whether the request is internal.\n   */\n\n\n  _rpcRequest(payload, callback) {\n    let isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let cb = callback;\n    const _payload = payload;\n\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n\n      if (_payload.method === \"eth_accounts\" || _payload.method === \"eth_requestAccounts\") {\n        // handle accounts changing\n        cb = (err, res) => {\n          this._handleAccountsChanged(res.result || [], _payload.method === \"eth_accounts\", isInternal);\n\n          callback(err, res);\n        };\n      } else if (_payload.method === \"wallet_getProviderState\") {\n        this._rpcEngine.handle(payload, cb);\n\n        return;\n      }\n    }\n\n    this.tryPreopenHandle(_payload, cb);\n  }\n\n  send(methodOrPayload, callbackOrArgs) {\n    if (!this._sentWarnings.send) {\n      log.warn(messages.warnings.sendDeprecation);\n      this._sentWarnings.send = true;\n    }\n\n    if (typeof methodOrPayload === \"string\" && (!callbackOrArgs || Array.isArray(callbackOrArgs))) {\n      return new Promise((resolve, reject) => {\n        try {\n          this._rpcRequest({\n            method: methodOrPayload,\n            params: callbackOrArgs\n          }, getRpcPromiseCallback(resolve, reject, false));\n        } catch (error) {\n          reject(error);\n        }\n      });\n    }\n\n    if (methodOrPayload && typeof methodOrPayload === \"object\" && typeof callbackOrArgs === \"function\") {\n      return this._rpcRequest(methodOrPayload, callbackOrArgs);\n    }\n\n    return this._sendSync(methodOrPayload);\n  }\n  /**\n   * DEPRECATED.\n   * Internal backwards compatibility method, used in send.\n   */\n\n\n  _sendSync(payload) {\n    let result;\n\n    switch (payload.method) {\n      case \"eth_accounts\":\n        result = this.selectedAddress ? [this.selectedAddress] : [];\n        break;\n\n      case \"eth_coinbase\":\n        result = this.selectedAddress || null;\n        break;\n\n      case \"eth_uninstallFilter\":\n        this._rpcRequest(payload, NOOP);\n\n        result = true;\n        break;\n\n      case \"net_version\":\n        result = this.networkVersion || null;\n        break;\n\n      default:\n        throw new Error(messages.errors.unsupportedSync(payload.method));\n    }\n\n    return {\n      id: payload.id,\n      jsonrpc: payload.jsonrpc,\n      result\n    };\n  }\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits MetaMaskInpageProvider#connect\n   */\n\n\n  _handleConnect(chainId) {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", {\n        chainId\n      });\n      log.debug(messages.info.connected(chainId));\n    }\n  }\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits MetaMaskInpageProvider#disconnect\n   */\n\n\n  _handleDisconnect(isRecoverable, errorMessage) {\n    if (this._state.isConnected || !this._state.isPermanentlyDisconnected && !isRecoverable) {\n      this._state.isConnected = false;\n      let error;\n\n      if (isRecoverable) {\n        error = new EthereumRpcError(1013, // Try again later\n        errorMessage || messages.errors.disconnected());\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(1011, // Internal error\n        errorMessage || messages.errors.permanentlyDisconnected());\n        log.error(error);\n        this.chainId = null;\n        this._state.accounts = null;\n        this.selectedAddress = null;\n        this._state.isUnlocked = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  }\n  /**\n   * Called when connection is lost to critical streams.\n   *\n   * emits MetamaskInpageProvider#disconnect\n   */\n\n\n  _handleStreamDisconnect(streamName, error) {\n    logStreamDisconnectWarning(streamName, error, this);\n\n    this._handleDisconnect(false, error ? error.message : undefined);\n  }\n  /**\n   * Called when accounts may have changed.\n   */\n\n\n  _handleAccountsChanged(accounts) {\n    let isEthAccounts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false; // defensive programming\n\n    let finalAccounts = accounts;\n\n    if (!Array.isArray(finalAccounts)) {\n      log.error(\"MetaMask: Received non-array accounts parameter. Please report this bug.\", finalAccounts);\n      finalAccounts = [];\n    }\n\n    for (const account of accounts) {\n      if (typeof account !== \"string\") {\n        log.error(\"MetaMask: Received non-string account. Please report this bug.\", accounts);\n        finalAccounts = [];\n        break;\n      }\n    } // emit accountsChanged if anything about the accounts array has changed\n\n\n    if (!dequal(this._state.accounts, finalAccounts)) {\n      // we should always have the correct accounts even before eth_accounts\n      // returns, except in cases where isInternal is true\n      if (isEthAccounts && Array.isArray(this._state.accounts) && this._state.accounts.length > 0 && !isInternal) {\n        log.error('MetaMask: \"eth_accounts\" unexpectedly updated accounts. Please report this bug.', finalAccounts);\n      }\n\n      this._state.accounts = finalAccounts;\n      this.emit(\"accountsChanged\", finalAccounts);\n    } // handle selectedAddress\n\n\n    if (this.selectedAddress !== finalAccounts[0]) {\n      this.selectedAddress = finalAccounts[0] || null;\n    }\n  }\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state.\n   * Does nothing if neither the chainId nor the networkVersion are different\n   * from existing values.\n   *\n   * emits MetamaskInpageProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   */\n\n\n  _handleChainChanged() {\n    let {\n      chainId,\n      networkVersion\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (!chainId || !networkVersion) {\n      log.error(\"MetaMask: Received invalid network parameters. Please report this bug.\", {\n        chainId,\n        networkVersion\n      });\n      return;\n    }\n\n    if (networkVersion === \"loading\") {\n      this._handleDisconnect(true);\n    } else {\n      this._handleConnect(chainId);\n\n      if (chainId !== this.chainId) {\n        this.chainId = chainId;\n\n        if (this._state.initialized) {\n          this.emit(\"chainChanged\", this.chainId);\n        }\n      }\n    }\n  }\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   */\n\n\n  _handleUnlockStateChanged() {\n    let {\n      accounts,\n      isUnlocked\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (typeof isUnlocked !== \"boolean\") {\n      log.error(\"MetaMask: Received invalid isUnlocked parameter. Please report this bug.\", {\n        isUnlocked\n      });\n      return;\n    }\n\n    if (isUnlocked !== this._state.isUnlocked) {\n      this._state.isUnlocked = isUnlocked;\n\n      this._handleAccountsChanged(accounts || []);\n    }\n  }\n  /**\n   * Warns of deprecation for the given event, if applicable.\n   */\n\n\n  _warnOfDeprecation(eventName) {\n    if (this._sentWarnings.events[eventName] === false) {\n      log.warn(messages.warnings.events[eventName]);\n      this._sentWarnings.events[eventName] = true;\n    }\n  }\n\n}\n\n_defineProperty(TorusInpageProvider, \"_defaultState\", {\n  accounts: null,\n  isConnected: false,\n  isUnlocked: false,\n  initialized: false,\n  isPermanentlyDisconnected: false,\n  hasEmittedConnection: false\n});\n\nconst defaults = options => ({\n  algorithms: options.algorithms || [\"sha256\"],\n  delimiter: options.delimiter || \" \",\n  full: options.full || false\n}); // Generate list of hashes\n\n\nconst hashes = (options, data) => {\n  const internalHashes = {};\n  options.algorithms.forEach(algorithm => {\n    internalHashes[algorithm] = createHash(algorithm).update(data, \"utf8\").digest(\"base64\");\n  });\n  return internalHashes;\n}; // Build an integrity string\n\n\nconst integrity = (options, sri) => {\n  let output = \"\"; // Hash list\n\n  output += Object.keys(sri.hashes).map(algorithm => \"\".concat(algorithm, \"-\").concat(sri.hashes[algorithm])).join(options.delimiter);\n  return output;\n};\n\nconst main = (options, data) => {\n  // Defaults\n  const finalOptions = defaults(options);\n  const sri = {\n    hashes: hashes(finalOptions, data),\n    integrity: undefined\n  };\n  sri.integrity = integrity(finalOptions, sri);\n  return finalOptions.full ? sri : sri.integrity;\n};\n\nclass PopupHandler extends EventEmitter {\n  constructor(_ref) {\n    let {\n      url,\n      target,\n      features\n    } = _ref;\n    super();\n\n    _defineProperty(this, \"url\", void 0);\n\n    _defineProperty(this, \"target\", void 0);\n\n    _defineProperty(this, \"features\", void 0);\n\n    _defineProperty(this, \"window\", void 0);\n\n    _defineProperty(this, \"windowTimer\", void 0);\n\n    _defineProperty(this, \"iClosedWindow\", void 0);\n\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures();\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n\n    this._setupTimer();\n  }\n\n  _setupTimer() {\n    this.windowTimer = Number(setInterval(() => {\n      if (this.window && this.window.closed) {\n        clearInterval(this.windowTimer);\n\n        if (!this.iClosedWindow) {\n          this.emit(\"close\");\n        }\n\n        this.iClosedWindow = false;\n        this.window = undefined;\n      }\n\n      if (this.window === undefined) clearInterval(this.windowTimer);\n    }, 500));\n  }\n\n  open() {\n    var _this$window;\n\n    this.window = window.open(this.url.href, this.target, this.features);\n    if ((_this$window = this.window) !== null && _this$window !== void 0 && _this$window.focus) this.window.focus();\n    return Promise.resolve();\n  }\n\n  close() {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n\n  redirect(locationReplaceOnRedirect) {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url.href);\n    } else {\n      window.location.href = this.url.href;\n    }\n  }\n\n}\n/**\n * Returns whether the given image URL exists\n * @param url - the url of the image\n * @returns - whether the image exists\n */\n\n\nfunction imgExists(url) {\n  return new Promise((resolve, reject) => {\n    try {\n      const img = document.createElement(\"img\");\n\n      img.onload = () => resolve(true);\n\n      img.onerror = () => resolve(false);\n\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n/**\n * Extracts a name for the site from the DOM\n */\n\n\nconst getSiteName = window => {\n  const {\n    document\n  } = window;\n  const siteName = document.querySelector('head > meta[property=\"og:site_name\"]');\n\n  if (siteName) {\n    return siteName.content;\n  }\n\n  const metaTitle = document.querySelector('head > meta[name=\"title\"]');\n\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n\n  return window.location.hostname;\n};\n/**\n * Extracts an icon for the site from the DOM\n */\n\n\nfunction getSiteIcon(_x3) {\n  return _getSiteIcon.apply(this, arguments);\n}\n/**\n * Gets site metadata and returns it\n *\n */\n\n\nfunction _getSiteIcon() {\n  _getSiteIcon = _asyncToGenerator(function* (window) {\n    const {\n      document\n    } = window; // Use the site's favicon if it exists\n\n    let icon = document.querySelector('head > link[rel=\"shortcut icon\"]');\n\n    if (icon && (yield imgExists(icon.href))) {\n      return icon.href;\n    } // Search through available icons in no particular order\n\n\n    icon = Array.from(document.querySelectorAll('head > link[rel=\"icon\"]')).find(_icon => Boolean(_icon.href));\n\n    if (icon && (yield imgExists(icon.href))) {\n      return icon.href;\n    }\n\n    return null;\n  });\n  return _getSiteIcon.apply(this, arguments);\n}\n\nconst getSiteMetadata = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator(function* () {\n    return {\n      name: getSiteName(window),\n      icon: yield getSiteIcon(window)\n    };\n  });\n\n  return function getSiteMetadata() {\n    return _ref5.apply(this, arguments);\n  };\n}();\n/**\n * Sends site metadata over an RPC request.\n */\n\n\nfunction sendSiteMetadata(_x4) {\n  return _sendSiteMetadata.apply(this, arguments);\n}\n\nfunction _sendSiteMetadata() {\n  _sendSiteMetadata = _asyncToGenerator(function* (engine) {\n    try {\n      const domainMetadata = yield getSiteMetadata(); // call engine.handle directly to avoid normal RPC request handling\n\n      engine.handle({\n        jsonrpc: \"2.0\",\n        id: getPreopenInstanceId(),\n        method: \"wallet_sendDomainMetadata\",\n        params: domainMetadata\n      }, NOOP);\n    } catch (error) {\n      log.error({\n        message: messages.errors.sendSiteMetadata(),\n        originalError: error\n      });\n    }\n  });\n  return _sendSiteMetadata.apply(this, arguments);\n}\n\nconst _excluded = [\"host\", \"chainId\", \"networkName\"];\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nconst defaultVerifiers = {\n  [LOGIN_PROVIDER.GOOGLE]: true,\n  [LOGIN_PROVIDER.FACEBOOK]: true,\n  [LOGIN_PROVIDER.REDDIT]: true,\n  [LOGIN_PROVIDER.TWITCH]: true,\n  [LOGIN_PROVIDER.DISCORD]: true\n};\nconst iframeIntegrity = \"sha384-ChK4+k0VRMpAaC+psywsJYq0CnEqytZvQuy7L2cRWEwqImd7CA7Ep69YzBmHBR2V\";\nconst expectedCacheControlHeader = \"max-age=3600\";\nconst UNSAFE_METHODS = [\"eth_sendTransaction\", \"eth_signTypedData\", \"eth_signTypedData_v3\", \"eth_signTypedData_v4\", \"personal_sign\", \"eth_getEncryptionPublicKey\", \"eth_decrypt\"];\nconst isLocalStorageAvailable = storageAvailable(\"localStorage\"); // preload for iframe doesn't work https://bugs.chromium.org/p/chromium/issues/detail?id=593267\n\n(function () {\n  var _preLoadIframe = _asyncToGenerator(function* () {\n    try {\n      if (typeof document === \"undefined\") return;\n      const torusIframeHtml = document.createElement(\"link\");\n      const {\n        torusUrl\n      } = yield getTorusUrl(\"production\", {\n        check: false,\n        hash: iframeIntegrity,\n        version: \"\"\n      });\n      torusIframeHtml.href = \"\".concat(torusUrl, \"/popup\");\n      torusIframeHtml.crossOrigin = \"anonymous\";\n      torusIframeHtml.type = \"text/html\";\n      torusIframeHtml.rel = \"prefetch\";\n\n      if (torusIframeHtml.relList && torusIframeHtml.relList.supports) {\n        if (torusIframeHtml.relList.supports(\"prefetch\")) {\n          document.head.appendChild(torusIframeHtml);\n        }\n      }\n    } catch (error) {\n      log.warn(error);\n    }\n  });\n\n  function preLoadIframe() {\n    return _preLoadIframe.apply(this, arguments);\n  }\n\n  return preLoadIframe;\n})()();\n\nclass Torus {\n  constructor() {\n    let {\n      buttonPosition = BUTTON_POSITION.BOTTOM_LEFT,\n      modalZIndex = 99999,\n      apiKey = \"torus-default\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _defineProperty(this, \"buttonPosition\", BUTTON_POSITION.BOTTOM_LEFT);\n\n    _defineProperty(this, \"torusUrl\", void 0);\n\n    _defineProperty(this, \"torusIframe\", void 0);\n\n    _defineProperty(this, \"styleLink\", void 0);\n\n    _defineProperty(this, \"isLoggedIn\", void 0);\n\n    _defineProperty(this, \"isInitialized\", void 0);\n\n    _defineProperty(this, \"torusWidgetVisibility\", void 0);\n\n    _defineProperty(this, \"torusAlert\", void 0);\n\n    _defineProperty(this, \"nodeDetailManager\", void 0);\n\n    _defineProperty(this, \"torusJs\", void 0);\n\n    _defineProperty(this, \"apiKey\", void 0);\n\n    _defineProperty(this, \"modalZIndex\", void 0);\n\n    _defineProperty(this, \"alertZIndex\", void 0);\n\n    _defineProperty(this, \"torusAlertContainer\", void 0);\n\n    _defineProperty(this, \"isIframeFullScreen\", void 0);\n\n    _defineProperty(this, \"whiteLabel\", void 0);\n\n    _defineProperty(this, \"requestedVerifier\", void 0);\n\n    _defineProperty(this, \"currentVerifier\", void 0);\n\n    _defineProperty(this, \"embedTranslations\", void 0);\n\n    _defineProperty(this, \"ethereum\", void 0);\n\n    _defineProperty(this, \"provider\", void 0);\n\n    _defineProperty(this, \"communicationMux\", void 0);\n\n    _defineProperty(this, \"isLoginCallback\", void 0);\n\n    _defineProperty(this, \"dappStorageKey\", void 0);\n\n    _defineProperty(this, \"paymentProviders\", configuration.paymentProviders);\n\n    _defineProperty(this, \"loginHint\", \"\");\n\n    this.buttonPosition = buttonPosition;\n    this.torusUrl = \"\";\n    this.isLoggedIn = false; // ethereum.enable working\n\n    this.isInitialized = false; // init done\n\n    this.torusWidgetVisibility = true;\n    this.requestedVerifier = \"\";\n    this.currentVerifier = \"\";\n    this.nodeDetailManager = new NodeDetailManager();\n    this.torusJs = new TorusJs({\n      metadataHost: \"https://metadata.tor.us\",\n      allowHost: \"https://signer.tor.us/api/allow\"\n    });\n    this.apiKey = apiKey;\n    TorusJs.setAPIKey(apiKey);\n    setAPIKey(apiKey);\n    this.modalZIndex = modalZIndex;\n    this.alertZIndex = modalZIndex + 1000;\n    this.isIframeFullScreen = false;\n    this.dappStorageKey = \"\";\n  }\n\n  init() {\n    var _arguments = arguments,\n        _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      let {\n        buildEnv = TORUS_BUILD_ENV.PRODUCTION,\n        enableLogging = false,\n        // deprecated: use loginConfig instead\n        enabledVerifiers = defaultVerifiers,\n        network = {\n          host: \"mainnet\",\n          chainId: null,\n          networkName: \"\",\n          blockExplorer: \"\",\n          ticker: \"\",\n          tickerName: \"\"\n        },\n        loginConfig = {},\n        showTorusButton = true,\n        integrity = {\n          check: false,\n          hash: iframeIntegrity,\n          version: \"\"\n        },\n        whiteLabel,\n        skipTKey = false,\n        useLocalStorage = false\n      } = _arguments.length > 0 && _arguments[0] !== undefined ? _arguments[0] : {};\n      if (_this3.isInitialized) throw new Error(\"Already initialized\");\n      const {\n        torusUrl,\n        logLevel\n      } = yield getTorusUrl(buildEnv, integrity);\n      log.info(torusUrl, \"url loaded\");\n      _this3.torusUrl = torusUrl;\n      _this3.whiteLabel = whiteLabel;\n      log.setDefaultLevel(logLevel);\n      if (enableLogging) log.enableAll();else log.disableAll();\n      _this3.torusWidgetVisibility = showTorusButton;\n      let dappStorageKey = \"\";\n\n      if (isLocalStorageAvailable && useLocalStorage) {\n        const storedKey = window.localStorage.getItem(configuration.localStorageKey);\n        if (storedKey) dappStorageKey = storedKey;else {\n          const generatedKey = \"torus-app-\".concat(getPreopenInstanceId());\n          window.localStorage.setItem(configuration.localStorageKey, generatedKey);\n          dappStorageKey = generatedKey;\n        }\n      }\n\n      _this3.dappStorageKey = dappStorageKey;\n      const torusIframeUrl = new URL(torusUrl);\n      if (torusIframeUrl.pathname.endsWith(\"/\")) torusIframeUrl.pathname += \"popup\";else torusIframeUrl.pathname += \"/popup\";\n\n      if (dappStorageKey) {\n        torusIframeUrl.hash = \"#dappStorageKey=\".concat(dappStorageKey);\n      } // Iframe code\n\n\n      _this3.torusIframe = htmlToElement(\"<iframe\\n        id=\\\"torusIframe\\\"\\n        class=\\\"torusIframe\\\"\\n        src=\\\"\".concat(torusIframeUrl.href, \"\\\"\\n        style=\\\"display: none; position: fixed; top: 0; right: 0; width: 100%;\\n        height: 100%; border: none; border-radius: 0; z-index: \").concat(_this3.modalZIndex, \"\\\"\\n      ></iframe>\"));\n      _this3.torusAlertContainer = htmlToElement('<div id=\"torusAlertContainer\"></div>');\n      _this3.torusAlertContainer.style.display = \"none\";\n\n      _this3.torusAlertContainer.style.setProperty(\"z-index\", _this3.alertZIndex.toString());\n\n      const link = window.document.createElement(\"link\");\n      link.setAttribute(\"rel\", \"stylesheet\");\n      link.setAttribute(\"type\", \"text/css\");\n      link.setAttribute(\"href\", \"\".concat(torusUrl, \"/css/widget.css\"));\n      _this3.styleLink = link;\n      const {\n        defaultLanguage = getUserLanguage(),\n        customTranslations = {}\n      } = _this3.whiteLabel || {};\n      const mergedTranslations = deepmerge(configuration.translations, customTranslations);\n      const languageTranslations = mergedTranslations[defaultLanguage] || configuration.translations[getUserLanguage()];\n      _this3.embedTranslations = languageTranslations.embed;\n\n      const handleSetup = /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator(function* () {\n          yield documentReady();\n          return new Promise((resolve, reject) => {\n            _this3.torusIframe.onload = /*#__PURE__*/_asyncToGenerator(function* () {\n              // only do this if iframe is not full screen\n              _this3._setupWeb3();\n\n              const initStream = _this3.communicationMux.getStream(\"init_stream\");\n\n              initStream.on(\"data\", chunk => {\n                const {\n                  name,\n                  data,\n                  error\n                } = chunk;\n\n                if (name === \"init_complete\" && data.success) {\n                  // resolve promise\n                  _this3.isInitialized = true;\n\n                  _this3._displayIframe(_this3.isIframeFullScreen);\n\n                  resolve(undefined);\n                } else if (error) {\n                  reject(new Error(error));\n                }\n              });\n              initStream.write({\n                name: \"init_stream\",\n                data: {\n                  enabledVerifiers,\n                  loginConfig,\n                  whiteLabel: _this3.whiteLabel,\n                  buttonPosition: _this3.buttonPosition,\n                  torusWidgetVisibility: _this3.torusWidgetVisibility,\n                  apiKey: _this3.apiKey,\n                  skipTKey,\n                  network\n                }\n              });\n            });\n            window.document.head.appendChild(_this3.styleLink);\n            window.document.body.appendChild(_this3.torusIframe);\n            window.document.body.appendChild(_this3.torusAlertContainer);\n          });\n        });\n\n        return function handleSetup() {\n          return _ref6.apply(this, arguments);\n        };\n      }();\n\n      if (buildEnv === \"production\" && integrity.check) {\n        // hacky solution to check for iframe integrity\n        const fetchUrl = \"\".concat(torusUrl, \"/popup\");\n        const resp = yield fetch(fetchUrl, {\n          cache: \"reload\"\n        });\n\n        if (resp.headers.get(\"Cache-Control\") !== expectedCacheControlHeader) {\n          throw new Error(\"Unexpected Cache-Control headers, got \".concat(resp.headers.get(\"Cache-Control\")));\n        }\n\n        const response = yield resp.text();\n        const calculatedIntegrity = main({\n          algorithms: [\"sha384\"]\n        }, response);\n        log.info(calculatedIntegrity, \"integrity\");\n\n        if (calculatedIntegrity === integrity.hash) {\n          yield handleSetup();\n        } else {\n          _this3.clearInit();\n\n          throw new Error(\"Integrity check failed\");\n        }\n      } else {\n        yield handleSetup();\n      }\n\n      return undefined;\n    })();\n  }\n\n  login() {\n    let {\n      verifier = \"\",\n      login_hint: loginHint = \"\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    this.requestedVerifier = verifier;\n    this.loginHint = loginHint;\n    return this.ethereum.enable();\n  }\n\n  logout() {\n    return new Promise((resolve, reject) => {\n      if (!this.isLoggedIn) {\n        reject(new Error(\"User has not logged in yet\"));\n        return;\n      }\n\n      const logOutStream = this.communicationMux.getStream(\"logout\");\n      logOutStream.write({\n        name: \"logOut\"\n      });\n      const statusStream = this.communicationMux.getStream(\"status\");\n\n      const statusStreamHandler = status => {\n        if (!status.loggedIn) {\n          this.isLoggedIn = false;\n          this.currentVerifier = \"\";\n          this.requestedVerifier = \"\";\n          resolve();\n        } else reject(new Error(\"Some Error Occured\"));\n      };\n\n      handleStream(statusStream, \"data\", statusStreamHandler);\n    });\n  }\n\n  cleanUp() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this4.isLoggedIn) {\n        yield _this4.logout();\n      }\n\n      _this4.clearInit();\n    })();\n  }\n\n  clearInit() {\n    function isElement(element) {\n      return element instanceof Element || element instanceof HTMLDocument;\n    }\n\n    if (isElement(this.styleLink) && window.document.body.contains(this.styleLink)) {\n      this.styleLink.remove();\n      this.styleLink = undefined;\n    }\n\n    if (isElement(this.torusIframe) && window.document.body.contains(this.torusIframe)) {\n      this.torusIframe.remove();\n      this.torusIframe = undefined;\n    }\n\n    if (isElement(this.torusAlertContainer) && window.document.body.contains(this.torusAlertContainer)) {\n      this.torusAlert = undefined;\n      this.torusAlertContainer.remove();\n      this.torusAlertContainer = undefined;\n    }\n\n    this.isInitialized = false;\n  }\n\n  hideTorusButton() {\n    this.torusWidgetVisibility = false;\n\n    this._sendWidgetVisibilityStatus(false);\n\n    this._displayIframe();\n  }\n\n  showTorusButton() {\n    this.torusWidgetVisibility = true;\n\n    this._sendWidgetVisibilityStatus(true);\n\n    this._displayIframe();\n  }\n\n  setProvider() {\n    let _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    let {\n      host = \"mainnet\",\n      chainId = null,\n      networkName = \"\"\n    } = _ref,\n        rest = _objectWithoutProperties(_ref, _excluded);\n\n    return new Promise((resolve, reject) => {\n      const providerChangeStream = this.communicationMux.getStream(\"provider_change\");\n\n      const handler = chunk => {\n        const {\n          err,\n          success\n        } = chunk.data;\n        log.info(chunk);\n\n        if (err) {\n          reject(err);\n        } else if (success) {\n          resolve();\n        } else reject(new Error(\"some error occured\"));\n      };\n\n      handleStream(providerChangeStream, \"data\", handler);\n      const preopenInstanceId = getPreopenInstanceId();\n\n      this._handleWindow(preopenInstanceId, {\n        target: \"_blank\",\n        features: FEATURES_PROVIDER_CHANGE_WINDOW\n      });\n\n      providerChangeStream.write({\n        name: \"show_provider_change\",\n        data: {\n          network: _objectSpread({\n            host,\n            chainId,\n            networkName\n          }, rest),\n          preopenInstanceId,\n          override: false\n        }\n      });\n    });\n  }\n\n  showWallet(path) {\n    let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const showWalletStream = this.communicationMux.getStream(\"show_wallet\");\n    const finalPath = path ? \"/\".concat(path) : \"\";\n    showWalletStream.write({\n      name: \"show_wallet\",\n      data: {\n        path: finalPath\n      }\n    });\n\n    const showWalletHandler = chunk => {\n      if (chunk.name === \"show_wallet_instance\") {\n        // Let the error propogate up (hence, no try catch)\n        const {\n          instanceId\n        } = chunk.data;\n        const finalUrl = new URL(\"\".concat(this.torusUrl, \"/wallet\").concat(finalPath)); // Using URL constructor to prevent js injection and allow parameter validation.!\n\n        finalUrl.searchParams.append(\"integrity\", \"true\");\n        finalUrl.searchParams.append(\"instanceId\", instanceId);\n        Object.keys(params).forEach(x => {\n          finalUrl.searchParams.append(x, params[x]);\n        });\n\n        if (this.dappStorageKey) {\n          finalUrl.hash = \"#dappStorageKey=\".concat(this.dappStorageKey);\n        }\n\n        const walletWindow = new PopupHandler({\n          url: finalUrl,\n          features: FEATURES_DEFAULT_WALLET_WINDOW\n        });\n        walletWindow.open();\n      }\n    };\n\n    handleStream(showWalletStream, \"data\", showWalletHandler);\n  }\n\n  getPublicAddress(_ref2) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      let {\n        verifier,\n        verifierId,\n        isExtended = false\n      } = _ref2;\n      if (!configuration.supportedVerifierList.includes(verifier) || !WALLET_OPENLOGIN_VERIFIER_MAP[verifier]) throw new Error(\"Unsupported verifier\");\n      const nodeDetails = yield _this5.nodeDetailManager.getNodeDetails(false, true);\n      const endpoints = nodeDetails.torusNodeEndpoints;\n      const torusNodePubs = nodeDetails.torusNodePub;\n      const walletVerifier = verifier;\n      const openloginVerifier = WALLET_OPENLOGIN_VERIFIER_MAP[verifier];\n\n      try {\n        const existingV1User = yield _this5.torusJs.getUserTypeAndAddress(endpoints, torusNodePubs, {\n          verifier: walletVerifier,\n          verifierId\n        });\n\n        if (existingV1User.typeOfUser === \"v1\") {\n          if (!isExtended) return existingV1User.address;\n          return existingV1User;\n        } // we don't support v2 users with v1 verifiers so get or assign the key for v2 user on v2 `verifier`\n\n\n        const v2User = yield _this5.torusJs.getUserTypeAndAddress(endpoints, torusNodePubs, {\n          verifier: openloginVerifier,\n          verifierId\n        }, true);\n        if (!isExtended) return v2User.address;\n        return v2User;\n      } catch (error) {\n        if (error !== null && error !== void 0 && error.message.includes(\"Verifier + VerifierID has not yet been assigned\")) {\n          // if user doesn't have key then assign it with v2 verifier\n          const newV2User = yield _this5.torusJs.getUserTypeAndAddress(endpoints, torusNodePubs, {\n            verifier: openloginVerifier,\n            verifierId\n          }, true);\n          if (!isExtended) return newV2User.address;\n          return newV2User;\n        }\n\n        throw error;\n      }\n    })();\n  }\n\n  getUserInfo(message) {\n    return new Promise((resolve, reject) => {\n      if (this.isLoggedIn) {\n        const userInfoAccessStream = this.communicationMux.getStream(\"user_info_access\");\n        userInfoAccessStream.write({\n          name: \"user_info_access_request\"\n        });\n\n        const userInfoAccessHandler = chunk => {\n          const {\n            name,\n            data: {\n              approved,\n              payload,\n              rejected,\n              newRequest\n            }\n          } = chunk;\n\n          if (name === \"user_info_access_response\") {\n            if (approved) {\n              resolve(payload);\n            } else if (rejected) {\n              reject(new Error(\"User rejected the request\"));\n            } else if (newRequest) {\n              const userInfoStream = this.communicationMux.getStream(\"user_info\");\n\n              const userInfoHandler = handlerChunk => {\n                if (handlerChunk.name === \"user_info_response\") {\n                  if (handlerChunk.data.approved) {\n                    resolve(handlerChunk.data.payload);\n                  } else {\n                    reject(new Error(\"User rejected the request\"));\n                  }\n                }\n              };\n\n              handleStream(userInfoStream, \"data\", userInfoHandler);\n              const preopenInstanceId = getPreopenInstanceId();\n\n              this._handleWindow(preopenInstanceId, {\n                target: \"_blank\",\n                features: FEATURES_PROVIDER_CHANGE_WINDOW\n              });\n\n              userInfoStream.write({\n                name: \"user_info_request\",\n                data: {\n                  message,\n                  preopenInstanceId\n                }\n              });\n            }\n          }\n        };\n\n        handleStream(userInfoAccessStream, \"data\", userInfoAccessHandler);\n      } else reject(new Error(\"User has not logged in yet\"));\n    });\n  }\n\n  initiateTopup(provider, params) {\n    return new Promise((resolve, reject) => {\n      if (this.isInitialized) {\n        const {\n          errors,\n          isValid\n        } = validatePaymentProvider(provider, params);\n\n        if (!isValid) {\n          reject(new Error(JSON.stringify(errors)));\n          return;\n        }\n\n        const topupStream = this.communicationMux.getStream(\"topup\");\n\n        const topupHandler = chunk => {\n          if (chunk.name === \"topup_response\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n          }\n        };\n\n        handleStream(topupStream, \"data\", topupHandler);\n        const preopenInstanceId = getPreopenInstanceId();\n\n        this._handleWindow(preopenInstanceId);\n\n        topupStream.write({\n          name: \"topup_request\",\n          data: {\n            provider,\n            params,\n            preopenInstanceId\n          }\n        });\n      } else reject(new Error(\"Torus is not initialized yet\"));\n    });\n  }\n\n  _handleWindow(preopenInstanceId) {\n    let {\n      url,\n      target,\n      features\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (preopenInstanceId) {\n      const windowStream = this.communicationMux.getStream(\"window\");\n      const finalUrl = new URL(url || \"\".concat(this.torusUrl, \"/redirect?preopenInstanceId=\").concat(preopenInstanceId));\n\n      if (this.dappStorageKey) {\n        // If multiple instances, it returns the first one\n        if (finalUrl.hash) finalUrl.hash += \"&dappStorageKey=\".concat(this.dappStorageKey);else finalUrl.hash = \"#dappStorageKey=\".concat(this.dappStorageKey);\n      }\n\n      const handledWindow = new PopupHandler({\n        url: finalUrl,\n        target,\n        features\n      });\n      handledWindow.open();\n\n      if (!handledWindow.window) {\n        this._createPopupBlockAlert(preopenInstanceId, finalUrl.href);\n\n        return;\n      }\n\n      windowStream.write({\n        name: \"opened_window\",\n        data: {\n          preopenInstanceId\n        }\n      });\n\n      const closeHandler = _ref3 => {\n        let {\n          preopenInstanceId: receivedId,\n          close\n        } = _ref3;\n\n        if (receivedId === preopenInstanceId && close) {\n          handledWindow.close();\n          windowStream.removeListener(\"data\", closeHandler);\n        }\n      };\n\n      windowStream.on(\"data\", closeHandler);\n      handledWindow.once(\"close\", () => {\n        windowStream.write({\n          data: {\n            preopenInstanceId,\n            closed: true\n          }\n        });\n        windowStream.removeListener(\"data\", closeHandler);\n      });\n    }\n  }\n\n  _setEmbedWhiteLabel(element) {\n    // Set whitelabel\n    const {\n      theme\n    } = this.whiteLabel || {};\n\n    if (theme) {\n      const {\n        isDark = false,\n        colors = {}\n      } = theme;\n      if (isDark) element.classList.add(\"torus-dark\");\n      if (colors.torusBrand1) element.style.setProperty(\"--torus-brand-1\", colors.torusBrand1);\n      if (colors.torusGray2) element.style.setProperty(\"--torus-gray-2\", colors.torusGray2);\n    }\n  }\n\n  _getLogoUrl() {\n    var _this$whiteLabel, _this$whiteLabel$them;\n\n    let logoUrl = \"\".concat(this.torusUrl, \"/images/torus_icon-blue.svg\");\n\n    if ((_this$whiteLabel = this.whiteLabel) !== null && _this$whiteLabel !== void 0 && (_this$whiteLabel$them = _this$whiteLabel.theme) !== null && _this$whiteLabel$them !== void 0 && _this$whiteLabel$them.isDark) {\n      var _this$whiteLabel2;\n\n      logoUrl = ((_this$whiteLabel2 = this.whiteLabel) === null || _this$whiteLabel2 === void 0 ? void 0 : _this$whiteLabel2.logoLight) || logoUrl;\n    } else {\n      var _this$whiteLabel3;\n\n      logoUrl = ((_this$whiteLabel3 = this.whiteLabel) === null || _this$whiteLabel3 === void 0 ? void 0 : _this$whiteLabel3.logoDark) || logoUrl;\n    }\n\n    return logoUrl;\n  }\n\n  _sendWidgetVisibilityStatus(status) {\n    const torusWidgetVisibilityStream = this.communicationMux.getStream(\"torus-widget-visibility\");\n    torusWidgetVisibilityStream.write({\n      data: status\n    });\n  }\n\n  _displayIframe() {\n    let isFull = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    const style = {}; // set phase\n\n    if (!isFull) {\n      style.display = this.torusWidgetVisibility ? \"block\" : \"none\";\n      style.height = \"70px\";\n      style.width = \"70px\";\n\n      switch (this.buttonPosition) {\n        case BUTTON_POSITION.TOP_LEFT:\n          style.top = \"0px\";\n          style.left = \"0px\";\n          style.right = \"auto\";\n          style.bottom = \"auto\";\n          break;\n\n        case BUTTON_POSITION.TOP_RIGHT:\n          style.top = \"0px\";\n          style.right = \"0px\";\n          style.left = \"auto\";\n          style.bottom = \"auto\";\n          break;\n\n        case BUTTON_POSITION.BOTTOM_RIGHT:\n          style.bottom = \"0px\";\n          style.right = \"0px\";\n          style.top = \"auto\";\n          style.left = \"auto\";\n          break;\n\n        case BUTTON_POSITION.BOTTOM_LEFT:\n        default:\n          style.bottom = \"0px\";\n          style.left = \"0px\";\n          style.top = \"auto\";\n          style.right = \"auto\";\n          break;\n      }\n    } else {\n      style.display = \"block\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      style.top = \"0px\";\n      style.right = \"0px\";\n      style.left = \"0px\";\n      style.bottom = \"0px\";\n    }\n\n    Object.assign(this.torusIframe.style, style);\n    this.isIframeFullScreen = isFull;\n  }\n\n  _setupWeb3() {\n    log.info(\"setupWeb3 running\"); // setup background connection\n\n    const metamaskStream = new BasePostMessageStream({\n      name: \"embed_metamask\",\n      target: \"iframe_metamask\",\n      targetWindow: this.torusIframe.contentWindow,\n      targetOrigin: new URL(this.torusUrl).origin\n    }); // Due to compatibility reasons, we should not set up multiplexing on window.metamaskstream\n    // because the MetamaskInpageProvider also attempts to do so.\n    // We create another LocalMessageDuplexStream for communication between dapp <> iframe\n\n    const communicationStream = new BasePostMessageStream({\n      name: \"embed_comm\",\n      target: \"iframe_comm\",\n      targetWindow: this.torusIframe.contentWindow,\n      targetOrigin: new URL(this.torusUrl).origin\n    }); // Backward compatibility with Gotchi :)\n    // window.metamaskStream = this.communicationStream\n    // compose the inpage provider\n\n    const inpageProvider = new TorusInpageProvider(metamaskStream); // detect eth_requestAccounts and pipe to enable for now\n\n    const detectAccountRequestPrototypeModifier = m => {\n      const originalMethod = inpageProvider[m];\n\n      inpageProvider[m] = function providerFunc(method) {\n        if (method && method === \"eth_requestAccounts\") {\n          return inpageProvider.enable();\n        }\n\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        return originalMethod.apply(this, [method, ...args]);\n      };\n    };\n\n    detectAccountRequestPrototypeModifier(\"send\");\n    detectAccountRequestPrototypeModifier(\"sendAsync\");\n\n    inpageProvider.enable = () => {\n      return new Promise((resolve, reject) => {\n        // If user is already logged in, we assume they have given access to the website\n        inpageProvider.sendAsync({\n          jsonrpc: \"2.0\",\n          id: getPreopenInstanceId(),\n          method: \"eth_requestAccounts\",\n          params: []\n        }, (err, response) => {\n          const {\n            result: res\n          } = response || {};\n\n          if (err) {\n            setTimeout(() => {\n              reject(err);\n            }, 50);\n          } else if (Array.isArray(res) && res.length > 0) {\n            // If user is already rehydrated, resolve this\n            // else wait for something to be written to status stream\n            const handleLoginCb = () => {\n              if (this.requestedVerifier !== \"\" && this.currentVerifier !== this.requestedVerifier) {\n                const {\n                  requestedVerifier\n                } = this; // eslint-disable-next-line promise/no-promise-in-callback\n\n                this.logout() // eslint-disable-next-line promise/always-return\n                .then(_ => {\n                  this.requestedVerifier = requestedVerifier;\n\n                  this._showLoginPopup(true, resolve, reject);\n                }).catch(error => reject(error));\n              } else {\n                resolve(res);\n              }\n            };\n\n            if (this.isLoggedIn) {\n              handleLoginCb();\n            } else {\n              this.isLoginCallback = handleLoginCb;\n            }\n          } else {\n            // set up listener for login\n            this._showLoginPopup(true, resolve, reject);\n          }\n        });\n      });\n    };\n\n    inpageProvider.tryPreopenHandle = (payload, cb) => {\n      const _payload = payload;\n\n      if (!Array.isArray(_payload) && UNSAFE_METHODS.includes(_payload.method)) {\n        const preopenInstanceId = getPreopenInstanceId();\n\n        this._handleWindow(preopenInstanceId, {\n          target: \"_blank\",\n          features: FEATURES_CONFIRM_WINDOW\n        });\n\n        _payload.preopenInstanceId = preopenInstanceId;\n      }\n\n      inpageProvider._rpcEngine.handle(_payload, cb);\n    }; // Work around for web3@1.0 deleting the bound `sendAsync` but not the unbound\n    // `sendAsync` method on the prototype, causing `this` reference issues with drizzle\n\n\n    const proxiedInpageProvider = new Proxy(inpageProvider, {\n      // straight up lie that we deleted the property so that it doesnt\n      // throw an error in strict mode\n      deleteProperty: () => true\n    });\n    this.ethereum = proxiedInpageProvider;\n    const communicationMux = setupMultiplex(communicationStream);\n    this.communicationMux = communicationMux;\n    const windowStream = communicationMux.getStream(\"window\");\n    windowStream.on(\"data\", chunk => {\n      if (chunk.name === \"create_window\") {\n        // url is the url we need to open\n        // we can pass the final url upfront so that it removes the step of redirecting to /redirect and waiting for finalUrl\n        this._createPopupBlockAlert(chunk.data.preopenInstanceId, chunk.data.url);\n      }\n    }); // show torus widget if button clicked\n\n    const widgetStream = communicationMux.getStream(\"widget\");\n    widgetStream.on(\"data\", chunk => {\n      const {\n        data\n      } = chunk;\n\n      this._displayIframe(data);\n    }); // Show torus button if wallet has been hydrated/detected\n\n    const statusStream = communicationMux.getStream(\"status\");\n    statusStream.on(\"data\", status => {\n      // login\n      if (status.loggedIn) {\n        this.isLoggedIn = status.loggedIn;\n        this.currentVerifier = status.verifier;\n      } // logout\n      else this._displayIframe();\n\n      if (this.isLoginCallback) {\n        this.isLoginCallback();\n        delete this.isLoginCallback;\n      }\n    });\n    this.provider = proxiedInpageProvider;\n    if (this.provider.shouldSendMetadata) sendSiteMetadata(this.provider._rpcEngine);\n\n    inpageProvider._initializeState();\n\n    log.debug(\"Torus - injected provider\");\n  }\n\n  _showLoginPopup(calledFromEmbed, resolve, reject) {\n    const loginHandler = data => {\n      const {\n        err,\n        selectedAddress\n      } = data;\n\n      if (err) {\n        log.error(err);\n        if (reject) reject(err);\n      } // returns an array (cause accounts expects it)\n      else if (resolve) resolve([selectedAddress]);\n\n      if (this.isIframeFullScreen) this._displayIframe();\n    };\n\n    const oauthStream = this.communicationMux.getStream(\"oauth\");\n\n    if (!this.requestedVerifier) {\n      this._displayIframe(true);\n\n      handleStream(oauthStream, \"data\", loginHandler);\n      oauthStream.write({\n        name: \"oauth_modal\",\n        data: {\n          calledFromEmbed\n        }\n      });\n    } else {\n      handleStream(oauthStream, \"data\", loginHandler);\n      const preopenInstanceId = getPreopenInstanceId();\n\n      this._handleWindow(preopenInstanceId);\n\n      oauthStream.write({\n        name: \"oauth\",\n        data: {\n          calledFromEmbed,\n          verifier: this.requestedVerifier,\n          preopenInstanceId,\n          login_hint: this.loginHint\n        }\n      });\n    }\n  }\n\n  _createPopupBlockAlert(preopenInstanceId, url) {\n    const logoUrl = this._getLogoUrl();\n\n    const torusAlert = htmlToElement('<div id=\"torusAlert\" class=\"torus-alert--v2\">' + \"<div id=\\\"torusAlert__logo\\\"><img src=\\\"\".concat(logoUrl, \"\\\" /></div>\") + \"<div>\" + \"<h1 id=\\\"torusAlert__title\\\">\".concat(this.embedTranslations.actionRequired, \"</h1>\") + \"<p id=\\\"torusAlert__desc\\\">\".concat(this.embedTranslations.pendingAction, \"</p>\") + \"</div>\" + \"</div>\");\n    const successAlert = htmlToElement(\"<div><a id=\\\"torusAlert__btn\\\">\".concat(this.embedTranslations.continue, \"</a></div>\"));\n    const btnContainer = htmlToElement('<div id=\"torusAlert__btn-container\"></div>');\n    btnContainer.appendChild(successAlert);\n    torusAlert.appendChild(btnContainer);\n\n    const bindOnLoad = () => {\n      successAlert.addEventListener(\"click\", () => {\n        this._handleWindow(preopenInstanceId, {\n          url,\n          target: \"_blank\",\n          features: FEATURES_CONFIRM_WINDOW\n        });\n\n        torusAlert.remove();\n        if (this.torusAlertContainer.children.length === 0) this.torusAlertContainer.style.display = \"none\";\n      });\n    };\n\n    this._setEmbedWhiteLabel(torusAlert);\n\n    const attachOnLoad = () => {\n      this.torusAlertContainer.style.display = \"block\";\n      this.torusAlertContainer.appendChild(torusAlert);\n    };\n\n    runOnLoad(attachOnLoad);\n    runOnLoad(bindOnLoad);\n  }\n\n}\n\nexport { BUTTON_POSITION, LOGIN_PROVIDER, PAYMENT_PROVIDER, TORUS_BUILD_ENV, TorusInpageProvider, WALLET_OPENLOGIN_VERIFIER_MAP, Torus as default };","map":{"version":3,"sources":["/Users/advityasood/jude_anyft/node_modules/@toruslabs/torus-embed/dist/torus.esm.js"],"names":["_objectWithoutProperties","_defineProperty","NodeDetailManager","get","setAPIKey","SafeEventEmitter","ObjectMultiplex","createStreamMiddleware","JRPCEngine","createIdRemapMiddleware","BasePostMessageStream","setupMultiplex","TorusJs","deepmerge","ObservableStore","storeAsStream","ethErrors","EthereumRpcError","dequal","isDuplexStream","pump","loglevel","createHash","EventEmitter","LOGIN_PROVIDER","GOOGLE","FACEBOOK","TWITCH","REDDIT","DISCORD","WALLET_OPENLOGIN_VERIFIER_MAP","PAYMENT_PROVIDER","MOONPAY","WYRE","RAMPNETWORK","XANPOOL","MERCURYO","TRANSAK","TORUS_BUILD_ENV","PRODUCTION","DEVELOPMENT","BINANCE","TESTING","LRC","BETA","BUTTON_POSITION","BOTTOM_LEFT","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","paymentProviders$1","line1","line2","line3","supportPage","minOrderValue","maxOrderValue","validCurrencies","validCryptoCurrencies","includeFees","enforceMax","sell","translations","en","embed","continue","actionRequired","pendingAction","cookiesRequired","enableCookies","clickHere","de","ja","ko","zh","configuration","supportedVerifierList","paymentProviders","api","prodTorusUrl","localStorageKey","concat","window","location","hostname","runOnLoad","fn","Promise","resolve","reject","document","body","then","catch","addEventListener","htmlToElement","html","template","createElement","trimmedHtml","trim","innerHTML","content","firstChild","handleEvent","handle","eventName","handler","_len","arguments","length","handlerArgs","Array","_key","handlerWrapper","removeEventListener","handleStream","chunk","removeListener","on","documentReady","readyState","log","getLogger","messages","errors","disconnected","permanentlyDisconnected","sendSiteMetadata","unsupportedSync","method","invalidDuplexStream","invalidOptions","maxEventListeners","shouldSendMetadata","invalidRequestArgs","invalidRequestMethod","invalidRequestParams","invalidLoggerObject","invalidLoggerMethod","info","connected","chainId","warnings","enableDeprecation","sendDeprecation","events","close","data","networkChanged","notification","publicConfigStore","validatePaymentProvider","provider","params","isValid","Object","keys","selectedProvider","selectedParams","fiatValue","requestedOrderAmount","parseFloat","toString","selectedCurrency","includes","selectedCryptoCurrency","createErrorMiddleware","req","res","next","error","rpc","invalidRequest","message","done","logStreamDisconnectWarning","remoteLabel","emitter","warningMsg","stack","warn","listenerCount","emit","getPreopenInstanceId","Math","random","slice","getTorusUrl","buildEnv","integrity","torusUrl","logLevel","version","versionUsed","response","useAPIKey","getUserLanguage","userLanguage","navigator","language","userLanguages","split","prototype","hasOwnProperty","call","EMITTED_NOTIFICATIONS","NOOP","FEATURES_PROVIDER_CHANGE_WINDOW","FEATURES_DEFAULT_WALLET_WINDOW","FEATURES_CONFIRM_WINDOW","storageAvailable","type","storage","x","setItem","removeItem","e","code","name","getPopupFeatures","dualScreenLeft","screenLeft","undefined","screenX","dualScreenTop","screenTop","screenY","w","h","width","innerWidth","documentElement","clientWidth","screen","height","innerHeight","clientHeight","systemZoom","left","abs","top","features","ownKeys$1","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread$1","target","i","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","defaultMaxListeners","getRpcPromiseCallback","unwrapResult","isArray","result","TorusInpageProvider","constructor","connectionStream","jsonRpcStreamName","enable","experimentalMethods","send","Error","isTorus","setMaxListeners","_state","_defaultState","selectedAddress","networkVersion","_handleAccountsChanged","bind","_handleChainChanged","_handleUnlockStateChanged","_handleConnect","_handleDisconnect","_handleStreamDisconnect","_sendSync","_rpcRequest","_warnOfDeprecation","_initializeState","request","sendAsync","mux","_publicConfigStore","storageKey","createStream","ignoreStream","isConnected","jsonRpcConnection","stream","rpcEngine","middleware","_rpcEngine","payload","_sentWarnings","args","callback","addListener","listener","once","prependListener","prependOnceListener","accounts","isUnlocked","initialized","isInternal","cb","_payload","jsonrpc","err","tryPreopenHandle","methodOrPayload","callbackOrArgs","id","debug","isRecoverable","errorMessage","isPermanentlyDisconnected","streamName","isEthAccounts","finalAccounts","account","hasEmittedConnection","defaults","options","algorithms","delimiter","full","hashes","internalHashes","algorithm","update","digest","sri","output","map","join","main","finalOptions","PopupHandler","_ref","url","windowTimer","iClosedWindow","_setupTimer","Number","setInterval","closed","clearInterval","open","_this$window","href","focus","redirect","locationReplaceOnRedirect","replace","imgExists","img","onload","onerror","src","getSiteName","siteName","querySelector","metaTitle","title","getSiteIcon","icon","from","querySelectorAll","find","_icon","Boolean","getSiteMetadata","engine","domainMetadata","originalError","_excluded","ownKeys","_objectSpread","defaultVerifiers","iframeIntegrity","expectedCacheControlHeader","UNSAFE_METHODS","isLocalStorageAvailable","torusIframeHtml","check","hash","crossOrigin","rel","relList","supports","head","appendChild","preLoadIframe","Torus","buttonPosition","modalZIndex","apiKey","isLoggedIn","isInitialized","torusWidgetVisibility","requestedVerifier","currentVerifier","nodeDetailManager","torusJs","metadataHost","allowHost","alertZIndex","isIframeFullScreen","dappStorageKey","init","enableLogging","enabledVerifiers","network","host","networkName","blockExplorer","ticker","tickerName","loginConfig","showTorusButton","whiteLabel","skipTKey","useLocalStorage","setDefaultLevel","enableAll","disableAll","storedKey","localStorage","getItem","generatedKey","torusIframeUrl","URL","pathname","endsWith","torusIframe","torusAlertContainer","style","display","setProperty","link","setAttribute","styleLink","defaultLanguage","customTranslations","mergedTranslations","languageTranslations","embedTranslations","handleSetup","_setupWeb3","initStream","communicationMux","getStream","success","_displayIframe","write","fetchUrl","resp","fetch","cache","headers","text","calculatedIntegrity","clearInit","login","verifier","login_hint","loginHint","ethereum","logout","logOutStream","statusStream","statusStreamHandler","status","loggedIn","cleanUp","isElement","element","Element","HTMLDocument","contains","remove","torusAlert","hideTorusButton","_sendWidgetVisibilityStatus","setProvider","rest","providerChangeStream","preopenInstanceId","_handleWindow","override","showWallet","path","showWalletStream","finalPath","showWalletHandler","instanceId","finalUrl","searchParams","append","walletWindow","getPublicAddress","_ref2","verifierId","isExtended","nodeDetails","getNodeDetails","endpoints","torusNodeEndpoints","torusNodePubs","torusNodePub","walletVerifier","openloginVerifier","existingV1User","getUserTypeAndAddress","typeOfUser","address","v2User","newV2User","getUserInfo","userInfoAccessStream","userInfoAccessHandler","approved","rejected","newRequest","userInfoStream","userInfoHandler","handlerChunk","initiateTopup","JSON","stringify","topupStream","topupHandler","windowStream","handledWindow","_createPopupBlockAlert","closeHandler","_ref3","receivedId","_setEmbedWhiteLabel","theme","isDark","colors","classList","add","torusBrand1","torusGray2","_getLogoUrl","_this$whiteLabel","_this$whiteLabel$them","logoUrl","_this$whiteLabel2","logoLight","_this$whiteLabel3","logoDark","torusWidgetVisibilityStream","isFull","right","bottom","assign","metamaskStream","targetWindow","contentWindow","targetOrigin","origin","communicationStream","inpageProvider","detectAccountRequestPrototypeModifier","m","originalMethod","providerFunc","setTimeout","handleLoginCb","_","_showLoginPopup","isLoginCallback","proxiedInpageProvider","Proxy","deleteProperty","widgetStream","calledFromEmbed","loginHandler","oauthStream","successAlert","btnContainer","bindOnLoad","children","attachOnLoad","default"],"mappings":"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","sourcesContent":["import _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport NodeDetailManager from '@toruslabs/fetch-node-details';\nimport { get, setAPIKey } from '@toruslabs/http-helpers';\nimport { SafeEventEmitter, ObjectMultiplex, createStreamMiddleware, JRPCEngine, createIdRemapMiddleware, BasePostMessageStream, setupMultiplex } from '@toruslabs/openlogin-jrpc';\nimport TorusJs from '@toruslabs/torus.js';\nimport deepmerge from 'lodash.merge';\nimport { ObservableStore, storeAsStream } from '@metamask/obs-store';\nimport { ethErrors, EthereumRpcError } from 'eth-rpc-errors';\nimport dequal from 'fast-deep-equal';\nimport { isDuplexStream } from 'is-stream';\nimport pump from 'pump';\nimport loglevel from 'loglevel';\nimport createHash from 'create-hash';\nimport { EventEmitter } from 'events';\n\nconst LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  TWITCH: \"twitch\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\"\n};\nconst WALLET_OPENLOGIN_VERIFIER_MAP = {\n  [LOGIN_PROVIDER.GOOGLE]: \"tkey-google\",\n  [LOGIN_PROVIDER.FACEBOOK]: \"tkey-facebook\",\n  [LOGIN_PROVIDER.TWITCH]: \"tkey-twitch\",\n  [LOGIN_PROVIDER.REDDIT]: \"tkey-reddit\",\n  [LOGIN_PROVIDER.DISCORD]: \"tkey-discord\"\n};\nconst PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  WYRE: \"wyre\",\n  RAMPNETWORK: \"rampnetwork\",\n  XANPOOL: \"xanpool\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\"\n};\nconst TORUS_BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  BINANCE: \"binance\",\n  TESTING: \"testing\",\n  LRC: \"lrc\",\n  BETA: \"beta\"\n};\nconst BUTTON_POSITION = {\n  BOTTOM_LEFT: \"bottom-left\",\n  TOP_LEFT: \"top-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  TOP_RIGHT: \"top-right\"\n};\n\nconst paymentProviders$1 = {\n  [PAYMENT_PROVIDER.RAMPNETWORK]: {\n    line1: \"Debit Card/ Apple Pay/ Bank transfer\",\n    line2: \"0.49% - 2.9%\",\n    line3: \"5,000€/purchase, 20,000€/mo\",\n    supportPage: \"https://instant.ramp.network/\",\n    minOrderValue: 50,\n    maxOrderValue: 20000,\n    validCurrencies: [\"GBP\", \"EUR\", \"USD\"],\n    validCryptoCurrencies: [\"ETH\", \"DAI\", \"USDC\", \"BSC_BNB\"],\n    includeFees: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.MOONPAY]: {\n    line1: \"Credit / Debit Card / Apple Pay\",\n    line2: \"4.5% or 5 USD\",\n    line3: \"2,000€/day, 10,000€/mo\",\n    supportPage: \"https://help.moonpay.io/en/\",\n    minOrderValue: 24.99,\n    maxOrderValue: 50000,\n    validCurrencies: [\"USD\", \"EUR\", \"GBP\", \"AUD\", \"CAD\", \"SGD\", \"RUB\"],\n    validCryptoCurrencies: [\"ETH\", \"DAI\", \"TUSD\", \"USDC\", \"USDT\", \"BNB_BSC\", \"BUSD_BSC\"],\n    includeFees: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.WYRE]: {\n    line1: \"Apple Pay/ Debit/ Credit Card\",\n    line2: \"4.9% + 30¢ or 5 USD\",\n    line3: \"$250/day\",\n    supportPage: \"https://support.sendwyre.com/en/\",\n    minOrderValue: 5,\n    maxOrderValue: 500,\n    validCurrencies: [\"USD\", \"AUD\", \"CAD\", \"GBP\", \"EUR\"],\n    validCryptoCurrencies: [\"ETH\", \"DAI\", \"USDC\", \"USDT\"],\n    includeFees: false,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.XANPOOL]: {\n    line1: \"PayNow/ InstaPay/ FPS/ GoJekPay/ UPI/ PromptPay/ VietelPay/ DuitNow\",\n    line2: \"2.5% buying, 3% selling\",\n    line3: \"$2,500 / day\",\n    supportPage: \"mailto:support@xanpool.com\",\n    minOrderValue: 100,\n    maxOrderValue: 2500,\n    validCurrencies: [\"SGD\", \"HKD\", \"MYR\", \"PHP\", \"INR\", \"VND\", \"THB\", \"IDR\"],\n    validCryptoCurrencies: [\"ETH\", \"USDT\"],\n    includeFees: true,\n    sell: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.MERCURYO]: {\n    line1: \"Credit/ Debit Card/ Apple Pay\",\n    line2: \"3.95% or 4 USD\",\n    line3: \"10,000€/day, 25,000€/mo\",\n    supportPage: \"mailto:support@mercuryo.io\",\n    minOrderValue: 30,\n    maxOrderValue: 5000,\n    validCurrencies: [\"USD\", \"EUR\", \"RUB\", \"TRY\", \"GBP\", \"UAH\"],\n    validCryptoCurrencies: [\"ETH\", \"DAI\", \"BAT\", \"USDT\", \"OKB\"],\n    includeFees: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.TRANSAK]: {\n    line1: \"Credit/ Debit Card/ <br/>Bank Transfer (sepa/gbp)\",\n    line2: \"0.99% - 5.5% or 5 USD\",\n    line3: \"500€/day\",\n    supportPage: \"https://support.transak.com/hc/en-US\",\n    minOrderValue: 20,\n    maxOrderValue: 500,\n    validCurrencies: [\"USD\", \"EUR\", \"GBP\", \"AUD\", \"CAD\", \"SGD\"],\n    validCryptoCurrencies: [\"ETH\", \"DAI\", \"USDC\", \"USDT\"],\n    includeFees: true,\n    enforceMax: false\n  }\n};\nconst translations = {\n  en: {\n    embed: {\n      continue: \"Continue\",\n      actionRequired: \"Authorization required\",\n      pendingAction: \"Click continue to proceed with your request in a popup\",\n      cookiesRequired: \"Cookies Required\",\n      enableCookies: \"Please enable cookies in your browser preferences to access Torus\",\n      clickHere: \"More Info\"\n    }\n  },\n  de: {\n    embed: {\n      continue: \"Fortsetzen\",\n      actionRequired: \"Autorisierung erforderlich\",\n      pendingAction: \"Klicken Sie in einem Popup auf Weiter, um mit Ihrer Anfrage fortzufahren\",\n      cookiesRequired: \"Cookies benötigt\",\n      enableCookies: \"Bitte aktivieren Sie Cookies in Ihren Browsereinstellungen, um auf Torus zuzugreifen\",\n      clickHere: \"Mehr Info\"\n    }\n  },\n  ja: {\n    embed: {\n      continue: \"継続する\",\n      actionRequired: \"認証が必要です\",\n      pendingAction: \"続行をクリックして、ポップアップでリクエストを続行します\",\n      cookiesRequired: \"必要なクッキー\",\n      enableCookies: \"Torusにアクセスするには、ブラウザの設定でCookieを有効にしてください。\",\n      clickHere: \"詳しくは\"\n    }\n  },\n  ko: {\n    embed: {\n      continue: \"계속하다\",\n      actionRequired: \"승인 필요\",\n      pendingAction: \"팝업에서 요청을 진행하려면 계속을 클릭하십시오.\",\n      cookiesRequired: \"쿠키 필요\",\n      enableCookies: \"브라우저 환경 설정에서 쿠키를 활성화하여 Torus에 액세스하십시오.\",\n      clickHere: \"더 많은 정보\"\n    }\n  },\n  zh: {\n    embed: {\n      continue: \"继续\",\n      actionRequired: \"需要授权\",\n      pendingAction: \"单击继续以在弹出窗口中继续您的请求\",\n      cookiesRequired: \"必填Cookie\",\n      enableCookies: \"请在您的浏览器首选项中启用cookie以访问Torus。\",\n      clickHere: \"更多信息\"\n    }\n  }\n};\nvar configuration = {\n  supportedVerifierList: [LOGIN_PROVIDER.GOOGLE, LOGIN_PROVIDER.REDDIT, LOGIN_PROVIDER.DISCORD],\n  paymentProviders: paymentProviders$1,\n  api: \"https://api.tor.us\",\n  translations,\n  prodTorusUrl: \"\",\n  localStorageKey: \"torus-\".concat(window.location.hostname)\n};\n\nconst runOnLoad = fn => new Promise((resolve, reject) => {\n  if (window.document.body != null) {\n    Promise.resolve(fn()).then(resolve).catch(reject);\n  } else {\n    window.document.addEventListener(\"DOMContentLoaded\", () => {\n      Promise.resolve(fn()).then(resolve).catch(reject);\n    });\n  }\n});\nconst htmlToElement = html => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild;\n};\nconst handleEvent = function (handle, eventName, handler) {\n  for (var _len = arguments.length, handlerArgs = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    handlerArgs[_key - 3] = arguments[_key];\n  }\n\n  const handlerWrapper = () => {\n    handler(...handlerArgs);\n    handle.removeEventListener(eventName, handlerWrapper);\n  };\n\n  handle.addEventListener(eventName, handlerWrapper);\n};\nconst handleStream = (handle, eventName, handler) => {\n  const handlerWrapper = chunk => {\n    handler(chunk);\n    handle.removeListener(eventName, handlerWrapper);\n  };\n\n  handle.on(eventName, handlerWrapper);\n};\nasync function documentReady() {\n  return new Promise(resolve => {\n    if (document.readyState !== \"loading\") {\n      resolve();\n    } else {\n      handleEvent(document, \"DOMContentLoaded\", resolve);\n    }\n  });\n}\n\nvar log = loglevel.getLogger(\"torus-embed\");\n\nvar messages = {\n  errors: {\n    disconnected: () => \"Torus: Lost connection to Torus.\",\n    permanentlyDisconnected: () => \"Torus: Disconnected from iframe. Page reload required.\",\n    sendSiteMetadata: () => \"Torus: Failed to send site metadata. This is an internal error, please report this bug.\",\n    unsupportedSync: method => \"Torus: The Torus Ethereum provider does not support synchronous methods like \".concat(method, \" without a callback parameter.\"),\n    invalidDuplexStream: () => \"Must provide a Node.js-style duplex stream.\",\n    invalidOptions: (maxEventListeners, shouldSendMetadata) => \"Invalid options. Received: { maxEventListeners: \".concat(maxEventListeners, \", shouldSendMetadata: \").concat(shouldSendMetadata, \" }\"),\n    invalidRequestArgs: () => \"Expected a single, non-array, object argument.\",\n    invalidRequestMethod: () => \"'args.method' must be a non-empty string.\",\n    invalidRequestParams: () => \"'args.params' must be an object or array if provided.\",\n    invalidLoggerObject: () => \"'args.logger' must be an object if provided.\",\n    invalidLoggerMethod: method => \"'args.logger' must include required method '\".concat(method, \"'.\")\n  },\n  info: {\n    connected: chainId => \"Torus: Connected to chain with ID \\\"\".concat(chainId, \"\\\".\")\n  },\n  warnings: {\n    // deprecated methods\n    enableDeprecation: 'Torus: \"\"ethereum.enable()\" is deprecated and may be removed in the future. ' + 'Please use \"ethereum.send(\"eth_requestAccounts\")\" instead. For more information, see: https://eips.ethereum.org/EIPS/eip-1102',\n    sendDeprecation: 'Torus: \"ethereum.send(...)\" is deprecated and may be removed in the future.' + ' Please use \"ethereum.sendAsync(...)\" or \"ethereum.request(...)\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n    events: {\n      close: 'Torus: The event \"close\" is deprecated and may be removed in the future. Please use \"disconnect\" instead.' + \"\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193\",\n      data: 'Torus: The event \"data\" is deprecated and will be removed in the future.' + 'Use \"message\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193#message',\n      networkChanged: 'Torus: The event \"networkChanged\" is deprecated and may be removed in the future.' + ' Please use \"chainChanged\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n      notification: 'Torus: The event \"notification\" is deprecated and may be removed in the future. ' + 'Please use \"message\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193'\n    },\n    publicConfigStore: 'Torus: The property \"publicConfigStore\" is deprecated and WILL be removed in the future.'\n  }\n};\n\nconst {\n  paymentProviders\n} = configuration;\nconst validatePaymentProvider = (provider, params) => {\n  const errors = {};\n\n  if (!provider) {\n    return {\n      errors,\n      isValid: true\n    };\n  }\n\n  if (provider && !paymentProviders[provider]) {\n    errors.provider = \"Invalid Provider\";\n    return {\n      errors,\n      isValid: Object.keys(errors).length === 0\n    };\n  }\n\n  const selectedProvider = paymentProviders[provider];\n  const selectedParams = params || {}; // set default values\n  // if (!selectedParams.selectedCurrency) [selectedParams.selectedCurrency] = selectedProvider.validCurrencies\n  // if (!selectedParams.fiatValue) selectedParams.fiatValue = selectedProvider.minOrderValue\n  // if (!selectedParams.selectedCryptoCurrency) [selectedParams.selectedCryptoCurrency] = selectedProvider.validCryptoCurrencies\n  // validations\n\n  if (selectedParams.fiatValue) {\n    const requestedOrderAmount = +parseFloat(selectedParams.fiatValue.toString()) || 0;\n    if (requestedOrderAmount < selectedProvider.minOrderValue) errors.fiatValue = \"Requested amount is lower than supported\";\n    if (requestedOrderAmount > selectedProvider.maxOrderValue && selectedProvider.enforceMax) errors.fiatValue = \"Requested amount is higher than supported\";\n  }\n\n  if (selectedParams.selectedCurrency && !selectedProvider.validCurrencies.includes(selectedParams.selectedCurrency)) {\n    errors.selectedCurrency = \"Unsupported currency\";\n  }\n\n  if (selectedParams.selectedCryptoCurrency && !selectedProvider.validCryptoCurrencies.includes(selectedParams.selectedCryptoCurrency)) {\n    errors.selectedCryptoCurrency = \"Unsupported cryptoCurrency\";\n  }\n\n  return {\n    errors,\n    isValid: Object.keys(errors).length === 0\n  };\n}; // utility functions\n\n/**\n * json-rpc-engine middleware that logs RPC errors and and validates req.method.\n *\n * @param log - The logging API to use.\n * @returns  json-rpc-engine middleware function\n */\n\nfunction createErrorMiddleware() {\n  return (req, res, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof req.method !== \"string\" || !req.method) {\n      res.error = ethErrors.rpc.invalidRequest({\n        message: \"The request 'method' must be a non-empty string.\",\n        data: req\n      });\n    }\n\n    next(done => {\n      const {\n        error\n      } = res;\n\n      if (!error) {\n        return done();\n      }\n\n      log.error(\"MetaMask - RPC Error: \".concat(error.message), error);\n      return done();\n    });\n  };\n} // resolve response.result or response, reject errors\n/**\n * Logs a stream disconnection error. Emits an 'error' if given an\n * EventEmitter that has listeners for the 'error' event.\n *\n * @param log - The logging API to use.\n * @param remoteLabel - The label of the disconnected stream.\n * @param error - The associated error to log.\n * @param emitter - The logging API to use.\n */\n\nfunction logStreamDisconnectWarning(remoteLabel, error, emitter) {\n  let warningMsg = \"MetaMask: Lost connection to \\\"\".concat(remoteLabel, \"\\\".\");\n\n  if (error !== null && error !== void 0 && error.stack) {\n    warningMsg += \"\\n\".concat(error.stack);\n  }\n\n  log.warn(warningMsg);\n\n  if (emitter && emitter.listenerCount(\"error\") > 0) {\n    emitter.emit(\"error\", warningMsg);\n  }\n}\nconst getPreopenInstanceId = () => Math.random().toString(36).slice(2);\nconst getTorusUrl = async (buildEnv, integrity) => {\n  let torusUrl;\n  let logLevel; // Do not change this line\n\n  const version = \"1.20.4\";\n  let versionUsed = integrity.version || version;\n\n  try {\n    if ((buildEnv === \"binance\" || buildEnv === \"production\") && !integrity.version) {\n      let response;\n      if (!configuration.prodTorusUrl) response = await get(\"\".concat(configuration.api, \"/latestversion?name=@toruslabs/torus-embed&version=\").concat(version), {}, {\n        useAPIKey: true\n      });else response = {\n        data: configuration.prodTorusUrl\n      };\n      versionUsed = response.data; // eslint-disable-next-line require-atomic-updates\n\n      configuration.prodTorusUrl = response.data;\n    }\n  } catch (error) {\n    log.error(error, \"unable to fetch latest version\");\n  }\n\n  log.info(\"version used: \", versionUsed);\n\n  switch (buildEnv) {\n    case \"binance\":\n      torusUrl = \"https://binance.tor.us/v\".concat(versionUsed);\n      logLevel = \"info\";\n      break;\n\n    case \"testing\":\n      torusUrl = \"https://testing.tor.us\";\n      logLevel = \"debug\";\n      break;\n\n    case \"lrc\":\n      torusUrl = \"https://lrc.tor.us\";\n      logLevel = \"debug\";\n      break;\n\n    case \"beta\":\n      torusUrl = \"https://beta.tor.us\";\n      logLevel = \"debug\";\n      break;\n\n    case \"development\":\n      torusUrl = \"http://localhost:4050\";\n      logLevel = \"debug\";\n      break;\n\n    default:\n      torusUrl = \"https://app.tor.us/v\".concat(versionUsed);\n      logLevel = \"error\";\n      break;\n  }\n\n  return {\n    torusUrl,\n    logLevel\n  };\n};\nconst getUserLanguage = () => {\n  let userLanguage = window.navigator.language || \"en-US\";\n  const userLanguages = userLanguage.split(\"-\");\n  userLanguage = Object.prototype.hasOwnProperty.call(configuration.translations, userLanguages[0]) ? userLanguages[0] : \"en\";\n  return userLanguage;\n};\nconst EMITTED_NOTIFICATIONS = [\"eth_subscription\" // per eth-json-rpc-filters/subscriptionManager\n];\nconst NOOP = () => {// empty function\n};\nconst FEATURES_PROVIDER_CHANGE_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=660,width=375\";\nconst FEATURES_DEFAULT_WALLET_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=740,width=1315\";\nconst FEATURES_CONFIRM_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=700,width=450\";\nfunction storageAvailable(type) {\n  let storage;\n\n  try {\n    storage = window[type];\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return e && ( // everything except Firefox\n    e.code === 22 || // Firefox\n    e.code === 1014 || // test name field too, because code might not be present\n    // everything except Firefox\n    e.name === \"QuotaExceededError\" || // Firefox\n    e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") && // acknowledge QuotaExceededError only if there's something already stored\n    storage && storage.length !== 0;\n  }\n}\nfunction getPopupFeatures() {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n  const w = 1200;\n  const h = 700;\n  const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n  const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = \"titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=\".concat(h / systemZoom, \",width=\").concat(w / systemZoom, \",top=\").concat(top, \",left=\").concat(left);\n  return features;\n}\n\nfunction ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nSafeEventEmitter.defaultMaxListeners = 100; // resolve response.result, reject errors\n\nconst getRpcPromiseCallback = function (resolve, reject) {\n  let unwrapResult = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  return (error, response) => {\n    if (error || response.error) {\n      return reject(error || response.error);\n    }\n\n    return !unwrapResult || Array.isArray(response) ? resolve(response) : resolve(response.result);\n  };\n};\n\nclass TorusInpageProvider extends SafeEventEmitter {\n  /**\n   * The chain ID of the currently connected Ethereum chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n\n  /**\n   * The user's currently selected Ethereum address.\n   * If null, MetaMask is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n\n  /**\n   * Indicating that this provider is a MetaMask provider.\n   */\n  constructor(connectionStream) {\n    let {\n      maxEventListeners = 100,\n      shouldSendMetadata = true,\n      jsonRpcStreamName = \"provider\"\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super();\n\n    _defineProperty(this, \"chainId\", void 0);\n\n    _defineProperty(this, \"selectedAddress\", void 0);\n\n    _defineProperty(this, \"_rpcEngine\", void 0);\n\n    _defineProperty(this, \"networkVersion\", void 0);\n\n    _defineProperty(this, \"shouldSendMetadata\", void 0);\n\n    _defineProperty(this, \"isTorus\", void 0);\n\n    _defineProperty(this, \"_publicConfigStore\", void 0);\n\n    _defineProperty(this, \"tryPreopenHandle\", void 0);\n\n    _defineProperty(this, \"enable\", void 0);\n\n    _defineProperty(this, \"_state\", void 0);\n\n    _defineProperty(this, \"_jsonRpcConnection\", void 0);\n\n    _defineProperty(this, \"_sentWarnings\", {\n      // methods\n      enable: false,\n      experimentalMethods: false,\n      send: false,\n      publicConfigStore: false,\n      // events\n      events: {\n        close: false,\n        data: false,\n        networkChanged: false,\n        notification: false\n      }\n    });\n\n    if (!isDuplexStream(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n\n    this.isTorus = true;\n    this.setMaxListeners(maxEventListeners); // private state\n\n    this._state = _objectSpread$1({}, TorusInpageProvider._defaultState); // public state\n\n    this.selectedAddress = null;\n    this.networkVersion = null;\n    this.chainId = null;\n    this.shouldSendMetadata = shouldSendMetadata; // bind functions (to prevent e.g. web3@1.x from making unbound calls)\n\n    this._handleAccountsChanged = this._handleAccountsChanged.bind(this);\n    this._handleChainChanged = this._handleChainChanged.bind(this);\n    this._handleUnlockStateChanged = this._handleUnlockStateChanged.bind(this);\n    this._handleConnect = this._handleConnect.bind(this);\n    this._handleDisconnect = this._handleDisconnect.bind(this);\n    this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);\n    this._sendSync = this._sendSync.bind(this);\n    this._rpcRequest = this._rpcRequest.bind(this);\n    this._warnOfDeprecation = this._warnOfDeprecation.bind(this);\n    this._initializeState = this._initializeState.bind(this);\n    this.request = this.request.bind(this);\n    this.send = this.send.bind(this);\n    this.sendAsync = this.sendAsync.bind(this); // this.enable = this.enable.bind(this);\n    // setup connectionStream multiplexing\n\n    const mux = new ObjectMultiplex();\n    pump(connectionStream, mux, connectionStream, this._handleStreamDisconnect.bind(this, \"MetaMask\")); // subscribe to metamask public config (one-way)\n\n    this._publicConfigStore = new ObservableStore({\n      storageKey: \"Metamask-Config\"\n    }); // handle isUnlocked changes, and chainChanged and networkChanged events\n    // this._publicConfigStore.subscribe((stringifiedState) => {\n    //   // This is because we are using store as string\n    //   const state = JSON.parse(stringifiedState as unknown as string);\n    //   if (\"isUnlocked\" in state && state.isUnlocked !== this._state.isUnlocked) {\n    //     this._state.isUnlocked = state.isUnlocked;\n    //     if (!this._state.isUnlocked) {\n    //       // accounts are never exposed when the extension is locked\n    //       this._handleAccountsChanged([]);\n    //     } else {\n    //       // this will get the exposed accounts, if any\n    //       try {\n    //         this._rpcRequest(\n    //           { method: \"eth_accounts\", params: [] },\n    //           NOOP,\n    //           true // indicating that eth_accounts _should_ update accounts\n    //         );\n    //       } catch (_) {\n    //         // Swallow error\n    //       }\n    //     }\n    //   }\n    //   if (\"selectedAddress\" in state && this.selectedAddress !== state.selectedAddress) {\n    //     try {\n    //       this._rpcRequest(\n    //         { method: \"eth_accounts\", params: [] },\n    //         NOOP,\n    //         true // indicating that eth_accounts _should_ update accounts\n    //       );\n    //     } catch (_) {\n    //       // Swallow error\n    //     }\n    //   }\n    //   // Emit chainChanged event on chain change\n    //   if (\"chainId\" in state && state.chainId !== this.chainId) {\n    //     this.chainId = state.chainId || null;\n    //     this.emit(\"chainChanged\", this.chainId);\n    //     // indicate that we've connected, for EIP-1193 compliance\n    //     // we do this here so that iframe can initialize\n    //     if (!this._state.hasEmittedConnection) {\n    //       this._handleConnect(this.chainId);\n    //       this._state.hasEmittedConnection = true;\n    //     }\n    //   }\n    //   // Emit networkChanged event on network change\n    //   if (\"networkVersion\" in state && state.networkVersion !== this.networkVersion) {\n    //     this.networkVersion = state.networkVersion || null;\n    //     this.emit(\"networkChanged\", this.networkVersion);\n    //   }\n    // });\n\n    pump(mux.createStream(\"publicConfig\"), storeAsStream(this._publicConfigStore), // RPC requests should still work if only this stream fails\n    logStreamDisconnectWarning.bind(this, \"MetaMask PublicConfigStore\")); // ignore phishing warning message (handled elsewhere)\n\n    mux.ignoreStream(\"phishing\"); // setup own event listeners\n    // EIP-1193 connect\n\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    }); // connect to async provider\n\n    const jsonRpcConnection = createStreamMiddleware();\n    pump(jsonRpcConnection.stream, mux.createStream(jsonRpcStreamName), jsonRpcConnection.stream, this._handleStreamDisconnect.bind(this, \"MetaMask RpcProvider\")); // handle RPC requests via dapp-side rpc engine\n\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(createErrorMiddleware());\n    rpcEngine.push(jsonRpcConnection.middleware);\n    this._rpcEngine = rpcEngine; // json rpc notification listener\n\n    jsonRpcConnection.events.on(\"notification\", payload => {\n      const {\n        method,\n        params\n      } = payload;\n\n      if (method === \"wallet_accountsChanged\") {\n        this._handleAccountsChanged(params);\n      } else if (method === \"wallet_unlockStateChanged\") {\n        this._handleUnlockStateChanged(params);\n      } else if (method === \"wallet_chainChanged\") {\n        this._handleChainChanged(params);\n      } else if (EMITTED_NOTIFICATIONS.includes(payload.method)) {\n        // EIP 1193 subscriptions, per eth-json-rpc-filters/subscriptionManager\n        this.emit(\"data\", payload); // deprecated\n\n        this.emit(\"notification\", params.result);\n        this.emit(\"message\", {\n          type: method,\n          data: params\n        });\n      } // Backward compatibility for older non EIP 1193 subscriptions\n      // this.emit('data', null, payload)\n\n    });\n  }\n\n  get publicConfigStore() {\n    if (!this._sentWarnings.publicConfigStore) {\n      log.warn(messages.warnings.publicConfigStore);\n      this._sentWarnings.publicConfigStore = true;\n    }\n\n    return this._publicConfigStore;\n  }\n  /**\n   * Returns whether the inpage provider is connected to Torus.\n   */\n\n\n  isConnected() {\n    return this._state.isConnected;\n  }\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   *\n   * @param args - The RPC request arguments.\n   * @returns A Promise that resolves with the result of the RPC method,\n   * or rejects if an error is encountered.\n   */\n\n\n  async request(args) {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestArgs(),\n        data: args\n      });\n    }\n\n    const {\n      method,\n      params\n    } = args;\n\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestMethod(),\n        data: args\n      });\n    }\n\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestParams(),\n        data: args\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      this._rpcRequest({\n        method,\n        params\n      }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @param payload - The RPC request object.\n   * @param cb - The callback function.\n   */\n\n\n  sendAsync(payload, callback) {\n    this._rpcRequest(payload, callback);\n  }\n  /**\n   * We override the following event methods so that we can warn consumers\n   * about deprecated events:\n   *   addListener, on, once, prependListener, prependOnceListener\n   */\n\n\n  addListener(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n\n    return super.addListener(eventName, listener);\n  }\n\n  on(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n\n    return super.on(eventName, listener);\n  }\n\n  once(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n\n    return super.once(eventName, listener);\n  }\n\n  prependListener(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n\n    return super.prependListener(eventName, listener);\n  }\n\n  prependOnceListener(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n\n    return super.prependOnceListener(eventName, listener);\n  } // Private Methods\n  //= ===================\n\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n\n\n  async _initializeState() {\n    try {\n      const {\n        accounts,\n        chainId,\n        isUnlocked,\n        networkVersion\n      } = await this.request({\n        method: \"wallet_getProviderState\"\n      }); // indicate that we've connected, for EIP-1193 compliance\n\n      this.emit(\"connect\", {\n        chainId\n      });\n\n      this._handleChainChanged({\n        chainId,\n        networkVersion\n      });\n\n      this._handleUnlockStateChanged({\n        accounts,\n        isUnlocked\n      });\n\n      this._handleAccountsChanged(accounts);\n    } catch (error) {\n      log.error(\"MetaMask: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound.\n   *\n   * @param payload - The RPC request object.\n   * @param callback - The consumer's callback.\n   * @param isInternal - false - Whether the request is internal.\n   */\n\n\n  _rpcRequest(payload, callback) {\n    let isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let cb = callback;\n    const _payload = payload;\n\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n\n      if (_payload.method === \"eth_accounts\" || _payload.method === \"eth_requestAccounts\") {\n        // handle accounts changing\n        cb = (err, res) => {\n          this._handleAccountsChanged(res.result || [], _payload.method === \"eth_accounts\", isInternal);\n\n          callback(err, res);\n        };\n      } else if (_payload.method === \"wallet_getProviderState\") {\n        this._rpcEngine.handle(payload, cb);\n\n        return;\n      }\n    }\n\n    this.tryPreopenHandle(_payload, cb);\n  }\n\n  send(methodOrPayload, callbackOrArgs) {\n    if (!this._sentWarnings.send) {\n      log.warn(messages.warnings.sendDeprecation);\n      this._sentWarnings.send = true;\n    }\n\n    if (typeof methodOrPayload === \"string\" && (!callbackOrArgs || Array.isArray(callbackOrArgs))) {\n      return new Promise((resolve, reject) => {\n        try {\n          this._rpcRequest({\n            method: methodOrPayload,\n            params: callbackOrArgs\n          }, getRpcPromiseCallback(resolve, reject, false));\n        } catch (error) {\n          reject(error);\n        }\n      });\n    }\n\n    if (methodOrPayload && typeof methodOrPayload === \"object\" && typeof callbackOrArgs === \"function\") {\n      return this._rpcRequest(methodOrPayload, callbackOrArgs);\n    }\n\n    return this._sendSync(methodOrPayload);\n  }\n  /**\n   * DEPRECATED.\n   * Internal backwards compatibility method, used in send.\n   */\n\n\n  _sendSync(payload) {\n    let result;\n\n    switch (payload.method) {\n      case \"eth_accounts\":\n        result = this.selectedAddress ? [this.selectedAddress] : [];\n        break;\n\n      case \"eth_coinbase\":\n        result = this.selectedAddress || null;\n        break;\n\n      case \"eth_uninstallFilter\":\n        this._rpcRequest(payload, NOOP);\n\n        result = true;\n        break;\n\n      case \"net_version\":\n        result = this.networkVersion || null;\n        break;\n\n      default:\n        throw new Error(messages.errors.unsupportedSync(payload.method));\n    }\n\n    return {\n      id: payload.id,\n      jsonrpc: payload.jsonrpc,\n      result\n    };\n  }\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits MetaMaskInpageProvider#connect\n   */\n\n\n  _handleConnect(chainId) {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", {\n        chainId\n      });\n      log.debug(messages.info.connected(chainId));\n    }\n  }\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits MetaMaskInpageProvider#disconnect\n   */\n\n\n  _handleDisconnect(isRecoverable, errorMessage) {\n    if (this._state.isConnected || !this._state.isPermanentlyDisconnected && !isRecoverable) {\n      this._state.isConnected = false;\n      let error;\n\n      if (isRecoverable) {\n        error = new EthereumRpcError(1013, // Try again later\n        errorMessage || messages.errors.disconnected());\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(1011, // Internal error\n        errorMessage || messages.errors.permanentlyDisconnected());\n        log.error(error);\n        this.chainId = null;\n        this._state.accounts = null;\n        this.selectedAddress = null;\n        this._state.isUnlocked = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  }\n  /**\n   * Called when connection is lost to critical streams.\n   *\n   * emits MetamaskInpageProvider#disconnect\n   */\n\n\n  _handleStreamDisconnect(streamName, error) {\n    logStreamDisconnectWarning(streamName, error, this);\n\n    this._handleDisconnect(false, error ? error.message : undefined);\n  }\n  /**\n   * Called when accounts may have changed.\n   */\n\n\n  _handleAccountsChanged(accounts) {\n    let isEthAccounts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    // defensive programming\n    let finalAccounts = accounts;\n\n    if (!Array.isArray(finalAccounts)) {\n      log.error(\"MetaMask: Received non-array accounts parameter. Please report this bug.\", finalAccounts);\n      finalAccounts = [];\n    }\n\n    for (const account of accounts) {\n      if (typeof account !== \"string\") {\n        log.error(\"MetaMask: Received non-string account. Please report this bug.\", accounts);\n        finalAccounts = [];\n        break;\n      }\n    } // emit accountsChanged if anything about the accounts array has changed\n\n\n    if (!dequal(this._state.accounts, finalAccounts)) {\n      // we should always have the correct accounts even before eth_accounts\n      // returns, except in cases where isInternal is true\n      if (isEthAccounts && Array.isArray(this._state.accounts) && this._state.accounts.length > 0 && !isInternal) {\n        log.error('MetaMask: \"eth_accounts\" unexpectedly updated accounts. Please report this bug.', finalAccounts);\n      }\n\n      this._state.accounts = finalAccounts;\n      this.emit(\"accountsChanged\", finalAccounts);\n    } // handle selectedAddress\n\n\n    if (this.selectedAddress !== finalAccounts[0]) {\n      this.selectedAddress = finalAccounts[0] || null;\n    }\n  }\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state.\n   * Does nothing if neither the chainId nor the networkVersion are different\n   * from existing values.\n   *\n   * emits MetamaskInpageProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   */\n\n\n  _handleChainChanged() {\n    let {\n      chainId,\n      networkVersion\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (!chainId || !networkVersion) {\n      log.error(\"MetaMask: Received invalid network parameters. Please report this bug.\", {\n        chainId,\n        networkVersion\n      });\n      return;\n    }\n\n    if (networkVersion === \"loading\") {\n      this._handleDisconnect(true);\n    } else {\n      this._handleConnect(chainId);\n\n      if (chainId !== this.chainId) {\n        this.chainId = chainId;\n\n        if (this._state.initialized) {\n          this.emit(\"chainChanged\", this.chainId);\n        }\n      }\n    }\n  }\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   */\n\n\n  _handleUnlockStateChanged() {\n    let {\n      accounts,\n      isUnlocked\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (typeof isUnlocked !== \"boolean\") {\n      log.error(\"MetaMask: Received invalid isUnlocked parameter. Please report this bug.\", {\n        isUnlocked\n      });\n      return;\n    }\n\n    if (isUnlocked !== this._state.isUnlocked) {\n      this._state.isUnlocked = isUnlocked;\n\n      this._handleAccountsChanged(accounts || []);\n    }\n  }\n  /**\n   * Warns of deprecation for the given event, if applicable.\n   */\n\n\n  _warnOfDeprecation(eventName) {\n    if (this._sentWarnings.events[eventName] === false) {\n      log.warn(messages.warnings.events[eventName]);\n      this._sentWarnings.events[eventName] = true;\n    }\n  }\n\n}\n\n_defineProperty(TorusInpageProvider, \"_defaultState\", {\n  accounts: null,\n  isConnected: false,\n  isUnlocked: false,\n  initialized: false,\n  isPermanentlyDisconnected: false,\n  hasEmittedConnection: false\n});\n\nconst defaults = options => ({\n  algorithms: options.algorithms || [\"sha256\"],\n  delimiter: options.delimiter || \" \",\n  full: options.full || false\n}); // Generate list of hashes\n\n\nconst hashes = (options, data) => {\n  const internalHashes = {};\n  options.algorithms.forEach(algorithm => {\n    internalHashes[algorithm] = createHash(algorithm).update(data, \"utf8\").digest(\"base64\");\n  });\n  return internalHashes;\n}; // Build an integrity string\n\n\nconst integrity = (options, sri) => {\n  let output = \"\"; // Hash list\n\n  output += Object.keys(sri.hashes).map(algorithm => \"\".concat(algorithm, \"-\").concat(sri.hashes[algorithm])).join(options.delimiter);\n  return output;\n};\n\nconst main = (options, data) => {\n  // Defaults\n  const finalOptions = defaults(options);\n  const sri = {\n    hashes: hashes(finalOptions, data),\n    integrity: undefined\n  };\n  sri.integrity = integrity(finalOptions, sri);\n  return finalOptions.full ? sri : sri.integrity;\n};\n\nclass PopupHandler extends EventEmitter {\n  constructor(_ref) {\n    let {\n      url,\n      target,\n      features\n    } = _ref;\n    super();\n\n    _defineProperty(this, \"url\", void 0);\n\n    _defineProperty(this, \"target\", void 0);\n\n    _defineProperty(this, \"features\", void 0);\n\n    _defineProperty(this, \"window\", void 0);\n\n    _defineProperty(this, \"windowTimer\", void 0);\n\n    _defineProperty(this, \"iClosedWindow\", void 0);\n\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures();\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n\n    this._setupTimer();\n  }\n\n  _setupTimer() {\n    this.windowTimer = Number(setInterval(() => {\n      if (this.window && this.window.closed) {\n        clearInterval(this.windowTimer);\n\n        if (!this.iClosedWindow) {\n          this.emit(\"close\");\n        }\n\n        this.iClosedWindow = false;\n        this.window = undefined;\n      }\n\n      if (this.window === undefined) clearInterval(this.windowTimer);\n    }, 500));\n  }\n\n  open() {\n    var _this$window;\n\n    this.window = window.open(this.url.href, this.target, this.features);\n    if ((_this$window = this.window) !== null && _this$window !== void 0 && _this$window.focus) this.window.focus();\n    return Promise.resolve();\n  }\n\n  close() {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n\n  redirect(locationReplaceOnRedirect) {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url.href);\n    } else {\n      window.location.href = this.url.href;\n    }\n  }\n\n}\n\n/**\n * Returns whether the given image URL exists\n * @param url - the url of the image\n * @returns - whether the image exists\n */\n\nfunction imgExists(url) {\n  return new Promise((resolve, reject) => {\n    try {\n      const img = document.createElement(\"img\");\n\n      img.onload = () => resolve(true);\n\n      img.onerror = () => resolve(false);\n\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n/**\n * Extracts a name for the site from the DOM\n */\n\n\nconst getSiteName = window => {\n  const {\n    document\n  } = window;\n  const siteName = document.querySelector('head > meta[property=\"og:site_name\"]');\n\n  if (siteName) {\n    return siteName.content;\n  }\n\n  const metaTitle = document.querySelector('head > meta[name=\"title\"]');\n\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n\n  return window.location.hostname;\n};\n/**\n * Extracts an icon for the site from the DOM\n */\n\n\nasync function getSiteIcon(window) {\n  const {\n    document\n  } = window; // Use the site's favicon if it exists\n\n  let icon = document.querySelector('head > link[rel=\"shortcut icon\"]');\n\n  if (icon && (await imgExists(icon.href))) {\n    return icon.href;\n  } // Search through available icons in no particular order\n\n\n  icon = Array.from(document.querySelectorAll('head > link[rel=\"icon\"]')).find(_icon => Boolean(_icon.href));\n\n  if (icon && (await imgExists(icon.href))) {\n    return icon.href;\n  }\n\n  return null;\n}\n/**\n * Gets site metadata and returns it\n *\n */\n\n\nconst getSiteMetadata = async () => ({\n  name: getSiteName(window),\n  icon: await getSiteIcon(window)\n});\n/**\n * Sends site metadata over an RPC request.\n */\n\n\nasync function sendSiteMetadata(engine) {\n  try {\n    const domainMetadata = await getSiteMetadata(); // call engine.handle directly to avoid normal RPC request handling\n\n    engine.handle({\n      jsonrpc: \"2.0\",\n      id: getPreopenInstanceId(),\n      method: \"wallet_sendDomainMetadata\",\n      params: domainMetadata\n    }, NOOP);\n  } catch (error) {\n    log.error({\n      message: messages.errors.sendSiteMetadata(),\n      originalError: error\n    });\n  }\n}\n\nconst _excluded = [\"host\", \"chainId\", \"networkName\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nconst defaultVerifiers = {\n  [LOGIN_PROVIDER.GOOGLE]: true,\n  [LOGIN_PROVIDER.FACEBOOK]: true,\n  [LOGIN_PROVIDER.REDDIT]: true,\n  [LOGIN_PROVIDER.TWITCH]: true,\n  [LOGIN_PROVIDER.DISCORD]: true\n};\nconst iframeIntegrity = \"sha384-ChK4+k0VRMpAaC+psywsJYq0CnEqytZvQuy7L2cRWEwqImd7CA7Ep69YzBmHBR2V\";\nconst expectedCacheControlHeader = \"max-age=3600\";\nconst UNSAFE_METHODS = [\"eth_sendTransaction\", \"eth_signTypedData\", \"eth_signTypedData_v3\", \"eth_signTypedData_v4\", \"personal_sign\", \"eth_getEncryptionPublicKey\", \"eth_decrypt\"];\nconst isLocalStorageAvailable = storageAvailable(\"localStorage\"); // preload for iframe doesn't work https://bugs.chromium.org/p/chromium/issues/detail?id=593267\n\n(async function preLoadIframe() {\n  try {\n    if (typeof document === \"undefined\") return;\n    const torusIframeHtml = document.createElement(\"link\");\n    const {\n      torusUrl\n    } = await getTorusUrl(\"production\", {\n      check: false,\n      hash: iframeIntegrity,\n      version: \"\"\n    });\n    torusIframeHtml.href = \"\".concat(torusUrl, \"/popup\");\n    torusIframeHtml.crossOrigin = \"anonymous\";\n    torusIframeHtml.type = \"text/html\";\n    torusIframeHtml.rel = \"prefetch\";\n\n    if (torusIframeHtml.relList && torusIframeHtml.relList.supports) {\n      if (torusIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(torusIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.warn(error);\n  }\n})();\n\nclass Torus {\n  constructor() {\n    let {\n      buttonPosition = BUTTON_POSITION.BOTTOM_LEFT,\n      modalZIndex = 99999,\n      apiKey = \"torus-default\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _defineProperty(this, \"buttonPosition\", BUTTON_POSITION.BOTTOM_LEFT);\n\n    _defineProperty(this, \"torusUrl\", void 0);\n\n    _defineProperty(this, \"torusIframe\", void 0);\n\n    _defineProperty(this, \"styleLink\", void 0);\n\n    _defineProperty(this, \"isLoggedIn\", void 0);\n\n    _defineProperty(this, \"isInitialized\", void 0);\n\n    _defineProperty(this, \"torusWidgetVisibility\", void 0);\n\n    _defineProperty(this, \"torusAlert\", void 0);\n\n    _defineProperty(this, \"nodeDetailManager\", void 0);\n\n    _defineProperty(this, \"torusJs\", void 0);\n\n    _defineProperty(this, \"apiKey\", void 0);\n\n    _defineProperty(this, \"modalZIndex\", void 0);\n\n    _defineProperty(this, \"alertZIndex\", void 0);\n\n    _defineProperty(this, \"torusAlertContainer\", void 0);\n\n    _defineProperty(this, \"isIframeFullScreen\", void 0);\n\n    _defineProperty(this, \"whiteLabel\", void 0);\n\n    _defineProperty(this, \"requestedVerifier\", void 0);\n\n    _defineProperty(this, \"currentVerifier\", void 0);\n\n    _defineProperty(this, \"embedTranslations\", void 0);\n\n    _defineProperty(this, \"ethereum\", void 0);\n\n    _defineProperty(this, \"provider\", void 0);\n\n    _defineProperty(this, \"communicationMux\", void 0);\n\n    _defineProperty(this, \"isLoginCallback\", void 0);\n\n    _defineProperty(this, \"dappStorageKey\", void 0);\n\n    _defineProperty(this, \"paymentProviders\", configuration.paymentProviders);\n\n    _defineProperty(this, \"loginHint\", \"\");\n\n    this.buttonPosition = buttonPosition;\n    this.torusUrl = \"\";\n    this.isLoggedIn = false; // ethereum.enable working\n\n    this.isInitialized = false; // init done\n\n    this.torusWidgetVisibility = true;\n    this.requestedVerifier = \"\";\n    this.currentVerifier = \"\";\n    this.nodeDetailManager = new NodeDetailManager();\n    this.torusJs = new TorusJs({\n      metadataHost: \"https://metadata.tor.us\",\n      allowHost: \"https://signer.tor.us/api/allow\"\n    });\n    this.apiKey = apiKey;\n    TorusJs.setAPIKey(apiKey);\n    setAPIKey(apiKey);\n    this.modalZIndex = modalZIndex;\n    this.alertZIndex = modalZIndex + 1000;\n    this.isIframeFullScreen = false;\n    this.dappStorageKey = \"\";\n  }\n\n  async init() {\n    let {\n      buildEnv = TORUS_BUILD_ENV.PRODUCTION,\n      enableLogging = false,\n      // deprecated: use loginConfig instead\n      enabledVerifiers = defaultVerifiers,\n      network = {\n        host: \"mainnet\",\n        chainId: null,\n        networkName: \"\",\n        blockExplorer: \"\",\n        ticker: \"\",\n        tickerName: \"\"\n      },\n      loginConfig = {},\n      showTorusButton = true,\n      integrity = {\n        check: false,\n        hash: iframeIntegrity,\n        version: \"\"\n      },\n      whiteLabel,\n      skipTKey = false,\n      useLocalStorage = false\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (this.isInitialized) throw new Error(\"Already initialized\");\n    const {\n      torusUrl,\n      logLevel\n    } = await getTorusUrl(buildEnv, integrity);\n    log.info(torusUrl, \"url loaded\");\n    this.torusUrl = torusUrl;\n    this.whiteLabel = whiteLabel;\n    log.setDefaultLevel(logLevel);\n    if (enableLogging) log.enableAll();else log.disableAll();\n    this.torusWidgetVisibility = showTorusButton;\n    let dappStorageKey = \"\";\n\n    if (isLocalStorageAvailable && useLocalStorage) {\n      const storedKey = window.localStorage.getItem(configuration.localStorageKey);\n      if (storedKey) dappStorageKey = storedKey;else {\n        const generatedKey = \"torus-app-\".concat(getPreopenInstanceId());\n        window.localStorage.setItem(configuration.localStorageKey, generatedKey);\n        dappStorageKey = generatedKey;\n      }\n    }\n\n    this.dappStorageKey = dappStorageKey;\n    const torusIframeUrl = new URL(torusUrl);\n    if (torusIframeUrl.pathname.endsWith(\"/\")) torusIframeUrl.pathname += \"popup\";else torusIframeUrl.pathname += \"/popup\";\n\n    if (dappStorageKey) {\n      torusIframeUrl.hash = \"#dappStorageKey=\".concat(dappStorageKey);\n    } // Iframe code\n\n\n    this.torusIframe = htmlToElement(\"<iframe\\n        id=\\\"torusIframe\\\"\\n        class=\\\"torusIframe\\\"\\n        src=\\\"\".concat(torusIframeUrl.href, \"\\\"\\n        style=\\\"display: none; position: fixed; top: 0; right: 0; width: 100%;\\n        height: 100%; border: none; border-radius: 0; z-index: \").concat(this.modalZIndex, \"\\\"\\n      ></iframe>\"));\n    this.torusAlertContainer = htmlToElement('<div id=\"torusAlertContainer\"></div>');\n    this.torusAlertContainer.style.display = \"none\";\n    this.torusAlertContainer.style.setProperty(\"z-index\", this.alertZIndex.toString());\n    const link = window.document.createElement(\"link\");\n    link.setAttribute(\"rel\", \"stylesheet\");\n    link.setAttribute(\"type\", \"text/css\");\n    link.setAttribute(\"href\", \"\".concat(torusUrl, \"/css/widget.css\"));\n    this.styleLink = link;\n    const {\n      defaultLanguage = getUserLanguage(),\n      customTranslations = {}\n    } = this.whiteLabel || {};\n    const mergedTranslations = deepmerge(configuration.translations, customTranslations);\n    const languageTranslations = mergedTranslations[defaultLanguage] || configuration.translations[getUserLanguage()];\n    this.embedTranslations = languageTranslations.embed;\n\n    const handleSetup = async () => {\n      await documentReady();\n      return new Promise((resolve, reject) => {\n        this.torusIframe.onload = async () => {\n          // only do this if iframe is not full screen\n          this._setupWeb3();\n\n          const initStream = this.communicationMux.getStream(\"init_stream\");\n          initStream.on(\"data\", chunk => {\n            const {\n              name,\n              data,\n              error\n            } = chunk;\n\n            if (name === \"init_complete\" && data.success) {\n              // resolve promise\n              this.isInitialized = true;\n\n              this._displayIframe(this.isIframeFullScreen);\n\n              resolve(undefined);\n            } else if (error) {\n              reject(new Error(error));\n            }\n          });\n          initStream.write({\n            name: \"init_stream\",\n            data: {\n              enabledVerifiers,\n              loginConfig,\n              whiteLabel: this.whiteLabel,\n              buttonPosition: this.buttonPosition,\n              torusWidgetVisibility: this.torusWidgetVisibility,\n              apiKey: this.apiKey,\n              skipTKey,\n              network\n            }\n          });\n        };\n\n        window.document.head.appendChild(this.styleLink);\n        window.document.body.appendChild(this.torusIframe);\n        window.document.body.appendChild(this.torusAlertContainer);\n      });\n    };\n\n    if (buildEnv === \"production\" && integrity.check) {\n      // hacky solution to check for iframe integrity\n      const fetchUrl = \"\".concat(torusUrl, \"/popup\");\n      const resp = await fetch(fetchUrl, {\n        cache: \"reload\"\n      });\n\n      if (resp.headers.get(\"Cache-Control\") !== expectedCacheControlHeader) {\n        throw new Error(\"Unexpected Cache-Control headers, got \".concat(resp.headers.get(\"Cache-Control\")));\n      }\n\n      const response = await resp.text();\n      const calculatedIntegrity = main({\n        algorithms: [\"sha384\"]\n      }, response);\n      log.info(calculatedIntegrity, \"integrity\");\n\n      if (calculatedIntegrity === integrity.hash) {\n        await handleSetup();\n      } else {\n        this.clearInit();\n        throw new Error(\"Integrity check failed\");\n      }\n    } else {\n      await handleSetup();\n    }\n\n    return undefined;\n  }\n\n  login() {\n    let {\n      verifier = \"\",\n      login_hint: loginHint = \"\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    this.requestedVerifier = verifier;\n    this.loginHint = loginHint;\n    return this.ethereum.enable();\n  }\n\n  logout() {\n    return new Promise((resolve, reject) => {\n      if (!this.isLoggedIn) {\n        reject(new Error(\"User has not logged in yet\"));\n        return;\n      }\n\n      const logOutStream = this.communicationMux.getStream(\"logout\");\n      logOutStream.write({\n        name: \"logOut\"\n      });\n      const statusStream = this.communicationMux.getStream(\"status\");\n\n      const statusStreamHandler = status => {\n        if (!status.loggedIn) {\n          this.isLoggedIn = false;\n          this.currentVerifier = \"\";\n          this.requestedVerifier = \"\";\n          resolve();\n        } else reject(new Error(\"Some Error Occured\"));\n      };\n\n      handleStream(statusStream, \"data\", statusStreamHandler);\n    });\n  }\n\n  async cleanUp() {\n    if (this.isLoggedIn) {\n      await this.logout();\n    }\n\n    this.clearInit();\n  }\n\n  clearInit() {\n    function isElement(element) {\n      return element instanceof Element || element instanceof HTMLDocument;\n    }\n\n    if (isElement(this.styleLink) && window.document.body.contains(this.styleLink)) {\n      this.styleLink.remove();\n      this.styleLink = undefined;\n    }\n\n    if (isElement(this.torusIframe) && window.document.body.contains(this.torusIframe)) {\n      this.torusIframe.remove();\n      this.torusIframe = undefined;\n    }\n\n    if (isElement(this.torusAlertContainer) && window.document.body.contains(this.torusAlertContainer)) {\n      this.torusAlert = undefined;\n      this.torusAlertContainer.remove();\n      this.torusAlertContainer = undefined;\n    }\n\n    this.isInitialized = false;\n  }\n\n  hideTorusButton() {\n    this.torusWidgetVisibility = false;\n\n    this._sendWidgetVisibilityStatus(false);\n\n    this._displayIframe();\n  }\n\n  showTorusButton() {\n    this.torusWidgetVisibility = true;\n\n    this._sendWidgetVisibilityStatus(true);\n\n    this._displayIframe();\n  }\n\n  setProvider() {\n    let _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    let {\n      host = \"mainnet\",\n      chainId = null,\n      networkName = \"\"\n    } = _ref,\n        rest = _objectWithoutProperties(_ref, _excluded);\n\n    return new Promise((resolve, reject) => {\n      const providerChangeStream = this.communicationMux.getStream(\"provider_change\");\n\n      const handler = chunk => {\n        const {\n          err,\n          success\n        } = chunk.data;\n        log.info(chunk);\n\n        if (err) {\n          reject(err);\n        } else if (success) {\n          resolve();\n        } else reject(new Error(\"some error occured\"));\n      };\n\n      handleStream(providerChangeStream, \"data\", handler);\n      const preopenInstanceId = getPreopenInstanceId();\n\n      this._handleWindow(preopenInstanceId, {\n        target: \"_blank\",\n        features: FEATURES_PROVIDER_CHANGE_WINDOW\n      });\n\n      providerChangeStream.write({\n        name: \"show_provider_change\",\n        data: {\n          network: _objectSpread({\n            host,\n            chainId,\n            networkName\n          }, rest),\n          preopenInstanceId,\n          override: false\n        }\n      });\n    });\n  }\n\n  showWallet(path) {\n    let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const showWalletStream = this.communicationMux.getStream(\"show_wallet\");\n    const finalPath = path ? \"/\".concat(path) : \"\";\n    showWalletStream.write({\n      name: \"show_wallet\",\n      data: {\n        path: finalPath\n      }\n    });\n\n    const showWalletHandler = chunk => {\n      if (chunk.name === \"show_wallet_instance\") {\n        // Let the error propogate up (hence, no try catch)\n        const {\n          instanceId\n        } = chunk.data;\n        const finalUrl = new URL(\"\".concat(this.torusUrl, \"/wallet\").concat(finalPath)); // Using URL constructor to prevent js injection and allow parameter validation.!\n\n        finalUrl.searchParams.append(\"integrity\", \"true\");\n        finalUrl.searchParams.append(\"instanceId\", instanceId);\n        Object.keys(params).forEach(x => {\n          finalUrl.searchParams.append(x, params[x]);\n        });\n\n        if (this.dappStorageKey) {\n          finalUrl.hash = \"#dappStorageKey=\".concat(this.dappStorageKey);\n        }\n\n        const walletWindow = new PopupHandler({\n          url: finalUrl,\n          features: FEATURES_DEFAULT_WALLET_WINDOW\n        });\n        walletWindow.open();\n      }\n    };\n\n    handleStream(showWalletStream, \"data\", showWalletHandler);\n  }\n\n  async getPublicAddress(_ref2) {\n    let {\n      verifier,\n      verifierId,\n      isExtended = false\n    } = _ref2;\n    if (!configuration.supportedVerifierList.includes(verifier) || !WALLET_OPENLOGIN_VERIFIER_MAP[verifier]) throw new Error(\"Unsupported verifier\");\n    const nodeDetails = await this.nodeDetailManager.getNodeDetails(false, true);\n    const endpoints = nodeDetails.torusNodeEndpoints;\n    const torusNodePubs = nodeDetails.torusNodePub;\n    const walletVerifier = verifier;\n    const openloginVerifier = WALLET_OPENLOGIN_VERIFIER_MAP[verifier];\n\n    try {\n      const existingV1User = await this.torusJs.getUserTypeAndAddress(endpoints, torusNodePubs, {\n        verifier: walletVerifier,\n        verifierId\n      });\n\n      if (existingV1User.typeOfUser === \"v1\") {\n        if (!isExtended) return existingV1User.address;\n        return existingV1User;\n      } // we don't support v2 users with v1 verifiers so get or assign the key for v2 user on v2 `verifier`\n\n\n      const v2User = await this.torusJs.getUserTypeAndAddress(endpoints, torusNodePubs, {\n        verifier: openloginVerifier,\n        verifierId\n      }, true);\n      if (!isExtended) return v2User.address;\n      return v2User;\n    } catch (error) {\n      if (error !== null && error !== void 0 && error.message.includes(\"Verifier + VerifierID has not yet been assigned\")) {\n        // if user doesn't have key then assign it with v2 verifier\n        const newV2User = await this.torusJs.getUserTypeAndAddress(endpoints, torusNodePubs, {\n          verifier: openloginVerifier,\n          verifierId\n        }, true);\n        if (!isExtended) return newV2User.address;\n        return newV2User;\n      }\n\n      throw error;\n    }\n  }\n\n  getUserInfo(message) {\n    return new Promise((resolve, reject) => {\n      if (this.isLoggedIn) {\n        const userInfoAccessStream = this.communicationMux.getStream(\"user_info_access\");\n        userInfoAccessStream.write({\n          name: \"user_info_access_request\"\n        });\n\n        const userInfoAccessHandler = chunk => {\n          const {\n            name,\n            data: {\n              approved,\n              payload,\n              rejected,\n              newRequest\n            }\n          } = chunk;\n\n          if (name === \"user_info_access_response\") {\n            if (approved) {\n              resolve(payload);\n            } else if (rejected) {\n              reject(new Error(\"User rejected the request\"));\n            } else if (newRequest) {\n              const userInfoStream = this.communicationMux.getStream(\"user_info\");\n\n              const userInfoHandler = handlerChunk => {\n                if (handlerChunk.name === \"user_info_response\") {\n                  if (handlerChunk.data.approved) {\n                    resolve(handlerChunk.data.payload);\n                  } else {\n                    reject(new Error(\"User rejected the request\"));\n                  }\n                }\n              };\n\n              handleStream(userInfoStream, \"data\", userInfoHandler);\n              const preopenInstanceId = getPreopenInstanceId();\n\n              this._handleWindow(preopenInstanceId, {\n                target: \"_blank\",\n                features: FEATURES_PROVIDER_CHANGE_WINDOW\n              });\n\n              userInfoStream.write({\n                name: \"user_info_request\",\n                data: {\n                  message,\n                  preopenInstanceId\n                }\n              });\n            }\n          }\n        };\n\n        handleStream(userInfoAccessStream, \"data\", userInfoAccessHandler);\n      } else reject(new Error(\"User has not logged in yet\"));\n    });\n  }\n\n  initiateTopup(provider, params) {\n    return new Promise((resolve, reject) => {\n      if (this.isInitialized) {\n        const {\n          errors,\n          isValid\n        } = validatePaymentProvider(provider, params);\n\n        if (!isValid) {\n          reject(new Error(JSON.stringify(errors)));\n          return;\n        }\n\n        const topupStream = this.communicationMux.getStream(\"topup\");\n\n        const topupHandler = chunk => {\n          if (chunk.name === \"topup_response\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n          }\n        };\n\n        handleStream(topupStream, \"data\", topupHandler);\n        const preopenInstanceId = getPreopenInstanceId();\n\n        this._handleWindow(preopenInstanceId);\n\n        topupStream.write({\n          name: \"topup_request\",\n          data: {\n            provider,\n            params,\n            preopenInstanceId\n          }\n        });\n      } else reject(new Error(\"Torus is not initialized yet\"));\n    });\n  }\n\n  _handleWindow(preopenInstanceId) {\n    let {\n      url,\n      target,\n      features\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (preopenInstanceId) {\n      const windowStream = this.communicationMux.getStream(\"window\");\n      const finalUrl = new URL(url || \"\".concat(this.torusUrl, \"/redirect?preopenInstanceId=\").concat(preopenInstanceId));\n\n      if (this.dappStorageKey) {\n        // If multiple instances, it returns the first one\n        if (finalUrl.hash) finalUrl.hash += \"&dappStorageKey=\".concat(this.dappStorageKey);else finalUrl.hash = \"#dappStorageKey=\".concat(this.dappStorageKey);\n      }\n\n      const handledWindow = new PopupHandler({\n        url: finalUrl,\n        target,\n        features\n      });\n      handledWindow.open();\n\n      if (!handledWindow.window) {\n        this._createPopupBlockAlert(preopenInstanceId, finalUrl.href);\n\n        return;\n      }\n\n      windowStream.write({\n        name: \"opened_window\",\n        data: {\n          preopenInstanceId\n        }\n      });\n\n      const closeHandler = _ref3 => {\n        let {\n          preopenInstanceId: receivedId,\n          close\n        } = _ref3;\n\n        if (receivedId === preopenInstanceId && close) {\n          handledWindow.close();\n          windowStream.removeListener(\"data\", closeHandler);\n        }\n      };\n\n      windowStream.on(\"data\", closeHandler);\n      handledWindow.once(\"close\", () => {\n        windowStream.write({\n          data: {\n            preopenInstanceId,\n            closed: true\n          }\n        });\n        windowStream.removeListener(\"data\", closeHandler);\n      });\n    }\n  }\n\n  _setEmbedWhiteLabel(element) {\n    // Set whitelabel\n    const {\n      theme\n    } = this.whiteLabel || {};\n\n    if (theme) {\n      const {\n        isDark = false,\n        colors = {}\n      } = theme;\n      if (isDark) element.classList.add(\"torus-dark\");\n      if (colors.torusBrand1) element.style.setProperty(\"--torus-brand-1\", colors.torusBrand1);\n      if (colors.torusGray2) element.style.setProperty(\"--torus-gray-2\", colors.torusGray2);\n    }\n  }\n\n  _getLogoUrl() {\n    var _this$whiteLabel, _this$whiteLabel$them;\n\n    let logoUrl = \"\".concat(this.torusUrl, \"/images/torus_icon-blue.svg\");\n\n    if ((_this$whiteLabel = this.whiteLabel) !== null && _this$whiteLabel !== void 0 && (_this$whiteLabel$them = _this$whiteLabel.theme) !== null && _this$whiteLabel$them !== void 0 && _this$whiteLabel$them.isDark) {\n      var _this$whiteLabel2;\n\n      logoUrl = ((_this$whiteLabel2 = this.whiteLabel) === null || _this$whiteLabel2 === void 0 ? void 0 : _this$whiteLabel2.logoLight) || logoUrl;\n    } else {\n      var _this$whiteLabel3;\n\n      logoUrl = ((_this$whiteLabel3 = this.whiteLabel) === null || _this$whiteLabel3 === void 0 ? void 0 : _this$whiteLabel3.logoDark) || logoUrl;\n    }\n\n    return logoUrl;\n  }\n\n  _sendWidgetVisibilityStatus(status) {\n    const torusWidgetVisibilityStream = this.communicationMux.getStream(\"torus-widget-visibility\");\n    torusWidgetVisibilityStream.write({\n      data: status\n    });\n  }\n\n  _displayIframe() {\n    let isFull = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    const style = {}; // set phase\n\n    if (!isFull) {\n      style.display = this.torusWidgetVisibility ? \"block\" : \"none\";\n      style.height = \"70px\";\n      style.width = \"70px\";\n\n      switch (this.buttonPosition) {\n        case BUTTON_POSITION.TOP_LEFT:\n          style.top = \"0px\";\n          style.left = \"0px\";\n          style.right = \"auto\";\n          style.bottom = \"auto\";\n          break;\n\n        case BUTTON_POSITION.TOP_RIGHT:\n          style.top = \"0px\";\n          style.right = \"0px\";\n          style.left = \"auto\";\n          style.bottom = \"auto\";\n          break;\n\n        case BUTTON_POSITION.BOTTOM_RIGHT:\n          style.bottom = \"0px\";\n          style.right = \"0px\";\n          style.top = \"auto\";\n          style.left = \"auto\";\n          break;\n\n        case BUTTON_POSITION.BOTTOM_LEFT:\n        default:\n          style.bottom = \"0px\";\n          style.left = \"0px\";\n          style.top = \"auto\";\n          style.right = \"auto\";\n          break;\n      }\n    } else {\n      style.display = \"block\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      style.top = \"0px\";\n      style.right = \"0px\";\n      style.left = \"0px\";\n      style.bottom = \"0px\";\n    }\n\n    Object.assign(this.torusIframe.style, style);\n    this.isIframeFullScreen = isFull;\n  }\n\n  _setupWeb3() {\n    log.info(\"setupWeb3 running\"); // setup background connection\n\n    const metamaskStream = new BasePostMessageStream({\n      name: \"embed_metamask\",\n      target: \"iframe_metamask\",\n      targetWindow: this.torusIframe.contentWindow,\n      targetOrigin: new URL(this.torusUrl).origin\n    }); // Due to compatibility reasons, we should not set up multiplexing on window.metamaskstream\n    // because the MetamaskInpageProvider also attempts to do so.\n    // We create another LocalMessageDuplexStream for communication between dapp <> iframe\n\n    const communicationStream = new BasePostMessageStream({\n      name: \"embed_comm\",\n      target: \"iframe_comm\",\n      targetWindow: this.torusIframe.contentWindow,\n      targetOrigin: new URL(this.torusUrl).origin\n    }); // Backward compatibility with Gotchi :)\n    // window.metamaskStream = this.communicationStream\n    // compose the inpage provider\n\n    const inpageProvider = new TorusInpageProvider(metamaskStream); // detect eth_requestAccounts and pipe to enable for now\n\n    const detectAccountRequestPrototypeModifier = m => {\n      const originalMethod = inpageProvider[m];\n\n      inpageProvider[m] = function providerFunc(method) {\n        if (method && method === \"eth_requestAccounts\") {\n          return inpageProvider.enable();\n        }\n\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        return originalMethod.apply(this, [method, ...args]);\n      };\n    };\n\n    detectAccountRequestPrototypeModifier(\"send\");\n    detectAccountRequestPrototypeModifier(\"sendAsync\");\n\n    inpageProvider.enable = () => {\n      return new Promise((resolve, reject) => {\n        // If user is already logged in, we assume they have given access to the website\n        inpageProvider.sendAsync({\n          jsonrpc: \"2.0\",\n          id: getPreopenInstanceId(),\n          method: \"eth_requestAccounts\",\n          params: []\n        }, (err, response) => {\n          const {\n            result: res\n          } = response || {};\n\n          if (err) {\n            setTimeout(() => {\n              reject(err);\n            }, 50);\n          } else if (Array.isArray(res) && res.length > 0) {\n            // If user is already rehydrated, resolve this\n            // else wait for something to be written to status stream\n            const handleLoginCb = () => {\n              if (this.requestedVerifier !== \"\" && this.currentVerifier !== this.requestedVerifier) {\n                const {\n                  requestedVerifier\n                } = this; // eslint-disable-next-line promise/no-promise-in-callback\n\n                this.logout() // eslint-disable-next-line promise/always-return\n                .then(_ => {\n                  this.requestedVerifier = requestedVerifier;\n\n                  this._showLoginPopup(true, resolve, reject);\n                }).catch(error => reject(error));\n              } else {\n                resolve(res);\n              }\n            };\n\n            if (this.isLoggedIn) {\n              handleLoginCb();\n            } else {\n              this.isLoginCallback = handleLoginCb;\n            }\n          } else {\n            // set up listener for login\n            this._showLoginPopup(true, resolve, reject);\n          }\n        });\n      });\n    };\n\n    inpageProvider.tryPreopenHandle = (payload, cb) => {\n      const _payload = payload;\n\n      if (!Array.isArray(_payload) && UNSAFE_METHODS.includes(_payload.method)) {\n        const preopenInstanceId = getPreopenInstanceId();\n\n        this._handleWindow(preopenInstanceId, {\n          target: \"_blank\",\n          features: FEATURES_CONFIRM_WINDOW\n        });\n\n        _payload.preopenInstanceId = preopenInstanceId;\n      }\n\n      inpageProvider._rpcEngine.handle(_payload, cb);\n    }; // Work around for web3@1.0 deleting the bound `sendAsync` but not the unbound\n    // `sendAsync` method on the prototype, causing `this` reference issues with drizzle\n\n\n    const proxiedInpageProvider = new Proxy(inpageProvider, {\n      // straight up lie that we deleted the property so that it doesnt\n      // throw an error in strict mode\n      deleteProperty: () => true\n    });\n    this.ethereum = proxiedInpageProvider;\n    const communicationMux = setupMultiplex(communicationStream);\n    this.communicationMux = communicationMux;\n    const windowStream = communicationMux.getStream(\"window\");\n    windowStream.on(\"data\", chunk => {\n      if (chunk.name === \"create_window\") {\n        // url is the url we need to open\n        // we can pass the final url upfront so that it removes the step of redirecting to /redirect and waiting for finalUrl\n        this._createPopupBlockAlert(chunk.data.preopenInstanceId, chunk.data.url);\n      }\n    }); // show torus widget if button clicked\n\n    const widgetStream = communicationMux.getStream(\"widget\");\n    widgetStream.on(\"data\", chunk => {\n      const {\n        data\n      } = chunk;\n\n      this._displayIframe(data);\n    }); // Show torus button if wallet has been hydrated/detected\n\n    const statusStream = communicationMux.getStream(\"status\");\n    statusStream.on(\"data\", status => {\n      // login\n      if (status.loggedIn) {\n        this.isLoggedIn = status.loggedIn;\n        this.currentVerifier = status.verifier;\n      } // logout\n      else this._displayIframe();\n\n      if (this.isLoginCallback) {\n        this.isLoginCallback();\n        delete this.isLoginCallback;\n      }\n    });\n    this.provider = proxiedInpageProvider;\n    if (this.provider.shouldSendMetadata) sendSiteMetadata(this.provider._rpcEngine);\n\n    inpageProvider._initializeState();\n\n    log.debug(\"Torus - injected provider\");\n  }\n\n  _showLoginPopup(calledFromEmbed, resolve, reject) {\n    const loginHandler = data => {\n      const {\n        err,\n        selectedAddress\n      } = data;\n\n      if (err) {\n        log.error(err);\n        if (reject) reject(err);\n      } // returns an array (cause accounts expects it)\n      else if (resolve) resolve([selectedAddress]);\n\n      if (this.isIframeFullScreen) this._displayIframe();\n    };\n\n    const oauthStream = this.communicationMux.getStream(\"oauth\");\n\n    if (!this.requestedVerifier) {\n      this._displayIframe(true);\n\n      handleStream(oauthStream, \"data\", loginHandler);\n      oauthStream.write({\n        name: \"oauth_modal\",\n        data: {\n          calledFromEmbed\n        }\n      });\n    } else {\n      handleStream(oauthStream, \"data\", loginHandler);\n      const preopenInstanceId = getPreopenInstanceId();\n\n      this._handleWindow(preopenInstanceId);\n\n      oauthStream.write({\n        name: \"oauth\",\n        data: {\n          calledFromEmbed,\n          verifier: this.requestedVerifier,\n          preopenInstanceId,\n          login_hint: this.loginHint\n        }\n      });\n    }\n  }\n\n  _createPopupBlockAlert(preopenInstanceId, url) {\n    const logoUrl = this._getLogoUrl();\n\n    const torusAlert = htmlToElement('<div id=\"torusAlert\" class=\"torus-alert--v2\">' + \"<div id=\\\"torusAlert__logo\\\"><img src=\\\"\".concat(logoUrl, \"\\\" /></div>\") + \"<div>\" + \"<h1 id=\\\"torusAlert__title\\\">\".concat(this.embedTranslations.actionRequired, \"</h1>\") + \"<p id=\\\"torusAlert__desc\\\">\".concat(this.embedTranslations.pendingAction, \"</p>\") + \"</div>\" + \"</div>\");\n    const successAlert = htmlToElement(\"<div><a id=\\\"torusAlert__btn\\\">\".concat(this.embedTranslations.continue, \"</a></div>\"));\n    const btnContainer = htmlToElement('<div id=\"torusAlert__btn-container\"></div>');\n    btnContainer.appendChild(successAlert);\n    torusAlert.appendChild(btnContainer);\n\n    const bindOnLoad = () => {\n      successAlert.addEventListener(\"click\", () => {\n        this._handleWindow(preopenInstanceId, {\n          url,\n          target: \"_blank\",\n          features: FEATURES_CONFIRM_WINDOW\n        });\n\n        torusAlert.remove();\n        if (this.torusAlertContainer.children.length === 0) this.torusAlertContainer.style.display = \"none\";\n      });\n    };\n\n    this._setEmbedWhiteLabel(torusAlert);\n\n    const attachOnLoad = () => {\n      this.torusAlertContainer.style.display = \"block\";\n      this.torusAlertContainer.appendChild(torusAlert);\n    };\n\n    runOnLoad(attachOnLoad);\n    runOnLoad(bindOnLoad);\n  }\n\n}\n\nexport { BUTTON_POSITION, LOGIN_PROVIDER, PAYMENT_PROVIDER, TORUS_BUILD_ENV, TorusInpageProvider, WALLET_OPENLOGIN_VERIFIER_MAP, Torus as default };\n"]},"metadata":{},"sourceType":"module"}